     free_test.c:22 0:51:1:  %retval = alloca i32, align 4
     free_test.c:22 0:52:1:  %n1 = alloca i32*, align 8
     free_test.c:22 0:53:1:  %n2 = alloca i32, align 4
     free_test.c:22 0:54:1:  store i32 0, i32* %retval, align 4
     free_test.c:24 7:55:1:  call void @llvm.dbg.declare(metadata i32** %n1, metadata !35, metadata !DIExpression()), !dbg !36
     free_test.c:24 19:56:1:  %call = call noalias i8* @malloc(i64 4) #4, !dbg !15
     free_test.c:24 12:57:1:  %0 = bitcast i8* %call to i32*, !dbg !16
     free_test.c:24 7:58:1:  store i32* %0, i32** %n1, align 8, !dbg !14
     free_test.c:25 6:59:1:  call void @llvm.dbg.declare(metadata i32* %n2, metadata !39, metadata !DIExpression()), !dbg !40
     free_test.c:26 21:60:1:  %1 = bitcast i32* %n2 to i8*, !dbg !19
     free_test.c:26 2:61:1:  call void @klee_make_symbolic(i8* %1, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)), !dbg !20
     free_test.c:27 3:62:1:  %2 = load i32*, i32** %n1, align 8, !dbg !21
     free_test.c:27 6:63:1:  store i32 15, i32* %2, align 4, !dbg !22
     free_test.c:28 10:64:1:  %3 = load i32*, i32** %n1, align 8, !dbg !23
     free_test.c:28 14:65:1:  %4 = load i32, i32* %n2, align 4, !dbg !24
     free_test.c:28 2:66:1:  %call1 = call i32 @compare(i32* %3, i32 %4), !dbg !25
     free_test.c:6 0:13:1:  %retval = alloca i32, align 4
     free_test.c:6 0:14:1:  %n1.addr = alloca i32*, align 8
     free_test.c:6 0:15:1:  %n2.addr = alloca i32, align 4
     free_test.c:6 0:16:1:  store i32* %n1, i32** %n1.addr, align 8
     free_test.c:6 19:17:1:  call void @llvm.dbg.declare(metadata i32** %n1.addr, metadata !13, metadata !DIExpression()), !dbg !14
     free_test.c:6 0:18:1:  store i32 %n2, i32* %n2.addr, align 4
     free_test.c:6 27:19:1:  call void @llvm.dbg.declare(metadata i32* %n2.addr, metadata !15, metadata !DIExpression()), !dbg !16
     free_test.c:9 3:20:1:  %0 = load i32*, i32** %n1.addr, align 8, !dbg !17
     free_test.c:9 6:21:1:  store i32 15, i32* %0, align 4, !dbg !18
     free_test.c:10 7:22:1:  %1 = load i32*, i32** %n1.addr, align 8, !dbg !19
     free_test.c:10 6:23:1:  %2 = load i32, i32* %1, align 4, !dbg !21
     free_test.c:10 13:24:1:  %3 = load i32, i32* %n2.addr, align 4, !dbg !22
     free_test.c:10 10:25:1:  %cmp = icmp eq i32 %2, %3, !dbg !23
     free_test.c:10 6:26:1:  br i1 %cmp, label %if.then, label %if.else, !dbg !24
     free_test.c:17 3:34:2:  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)), !dbg !28
     free_test.c:18 3:35:2:  store i32 2, i32* %retval, align 4, !dbg !30
     free_test.c:18 3:36:2:  br label %return, !dbg !30
     free_test.c:20 1:39:2:  %4 = load i32, i32* %retval, align 4, !dbg !31
     free_test.c:20 1:40:2:  ret i32 %4, !dbg !31
     free_test.c:31 7:67:2:  %5 = load i32*, i32** %n1, align 8, !dbg !26
     free_test.c:31 7:68:2:  %6 = bitcast i32* %5 to i8*, !dbg !26
     free_test.c:12 3:29:1:  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)), !dbg !25
     free_test.c:31 2:69:2:  call void @free(i8* %6) #4, !dbg !27
     free_test.c:33 2:70:2:  ret i32 0, !dbg !28
     free_test.c:13 3:30:1:  store i32 1, i32* %retval, align 4, !dbg !27
     free_test.c:13 3:31:1:  br label %return, !dbg !27
     free_test.c:20 1:39:1:  %4 = load i32, i32* %retval, align 4, !dbg !31
     free_test.c:20 1:40:1:  ret i32 %4, !dbg !31
     free_test.c:31 7:67:1:  %5 = load i32*, i32** %n1, align 8, !dbg !26
     free_test.c:31 7:68:1:  %6 = bitcast i32* %5 to i8*, !dbg !26
     free_test.c:31 2:69:1:  call void @free(i8* %6) #4, !dbg !27
     free_test.c:33 2:70:1:  ret i32 0, !dbg !28
