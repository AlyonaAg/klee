     [no debug info]:254:1:  %n = alloca i32, align 4
     [no debug info]:255:1:  %0 = bitcast i32* %n to i8*
     [no debug info]:256:1:  call void @klee_make_symbolic(i8* %0, i64 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
     [no debug info]:257:1:  %1 = load i32, i32* %n, align 4
     [no debug info]:258:1:  %cmp = icmp sge i32 %1, -1
     [no debug info]:259:1:  %conv = zext i1 %cmp to i32
     [no debug info]:260:1:  %2 = load i32, i32* %n, align 4
     [no debug info]:261:1:  %cmp1 = icmp sle i32 %2, 14
     [no debug info]:262:1:  %conv2 = zext i1 %cmp1 to i32
     [no debug info]:263:1:  %and = and i32 %conv, %conv2
     [no debug info]:264:1:  %conv3 = sext i32 %and to i64
     [no debug info]:265:1:  call void @klee_assume(i64 %conv3)
     [no debug info]:266:1:  %3 = load i32, i32* %n, align 4
     [no debug info]:267:1:  call void @under_test(i32 %3)
     [no debug info]:168:1:  %n.addr = alloca i32, align 4
     [no debug info]:169:1:  %a = alloca i32*, align 8
     [no debug info]:170:1:  %m = alloca i32, align 4
     [no debug info]:171:1:  %L = alloca i32, align 4
     [no debug info]:172:1:  %i = alloca i32, align 4
     [no debug info]:173:1:  %s = alloca i8*, align 8
     [no debug info]:174:1:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:175:1:  store i32 0, i32* %L, align 4
     [no debug info]:176:1:  %0 = load i32, i32* %n.addr, align 4
     [no debug info]:177:1:  %cmp = icmp slt i32 %0, 0
     [no debug info]:178:1:  br i1 %cmp, label %for.end13, label %if.end
     [no debug info]:181:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:182:2:  store i32 %1, i32* %m, align 4
     [no debug info]:183:2:  br label %for.cond
     [no debug info]:186:2:  %2 = load i32, i32* %m, align 4
     [no debug info]:246:1:  ret void
     [no debug info]:187:2:  %tobool = icmp ne i32 %2, 0
     [no debug info]:188:2:  %3 = load i32, i32* %L, align 4
     [no debug info]:189:2:  br i1 %tobool, label %for.body, label %for.end
     [no debug info]:200:3:  %5 = load i32, i32* %n.addr, align 4
     [no debug info]:201:3:  %mul = mul nsw i32 %3, %5
     [no debug info]:202:3:  %div1 = sdiv i32 %mul, 6
     [no debug info]:203:3:  %add = add nsw i32 %div1, 1
     [no debug info]:204:3:  store i32 %add, i32* %L, align 4
     [no debug info]:205:3:  %6 = load i32, i32* %L, align 4
     [no debug info]:206:3:  %conv = sext i32 %6 to i64
     [no debug info]:207:3:  %mul2 = mul i64 %conv, 4
     [no debug info]:268:1:  ret i32 0
     [no debug info]:208:3:  %call = call i8* @malloc(i64 %mul2)
     [no debug info]:209:3:  %7 = bitcast i8* %call to i32*
     [no debug info]:210:3:  store i32* %7, i32** %a, align 8
     [no debug info]:211:3:  %8 = load i32*, i32** %a, align 8
     [no debug info]:212:3:  %tobool3 = icmp ne i32* %8, null
     [no debug info]:213:3:  br i1 %tobool3, label %if.end5, label %for.end13
     [no debug info]:216:3:  %9 = load i32*, i32** %a, align 8
     [no debug info]:217:3:  %10 = load i32, i32* %L, align 4
     [no debug info]:218:3:  %11 = load i32, i32* %n.addr, align 4
     [no debug info]:219:3:  %conv6 = sext i32 %11 to i64
     [no debug info]:220:3:  %call7 = call i32 @calc_fac(i32* %9, i32 %10, i64 %conv6)
     [no debug info]:192:2:  %inc = add nsw i32 %3, 1
     [no debug info]:12:3:  %a.addr = alloca i32*, align 8
     [no debug info]:13:3:  %L.addr = alloca i32, align 4
     [no debug info]:14:3:  %n.addr = alloca i64, align 8
     [no debug info]:15:3:  %b = alloca i64, align 8
     [no debug info]:16:3:  %c = alloca i64, align 8
     [no debug info]:17:3:  %i = alloca i32, align 4
     [no debug info]:18:3:  %l = alloca i32, align 4
     [no debug info]:193:2:  store i32 %inc, i32* %L, align 4
     [no debug info]:19:3:  store i32* %a, i32** %a.addr, align 8
     [no debug info]:20:3:  store i32 %L, i32* %L.addr, align 4
     [no debug info]:21:3:  store i64 %n, i64* %n.addr, align 8
     [no debug info]:194:2:  %4 = load i32, i32* %m, align 4
     [no debug info]:22:3:  %0 = load i32*, i32** %a.addr, align 8
     [no debug info]:23:3:  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
     [no debug info]:24:3:  store i32 1, i32* %arrayidx, align 4
     [no debug info]:25:3:  store i32 1, i32* %i, align 4
     [no debug info]:26:3:  br label %for.cond
     [no debug info]:29:3:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:3:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:195:2:  %div = sdiv i32 %4, 10
     [no debug info]:31:3:  %cmp = icmp slt i32 %1, %2
     [no debug info]:32:3:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:46:3:  store i32 1, i32* %l, align 4
     [no debug info]:196:2:  store i32 %div, i32* %m, align 4
     [no debug info]:47:3:  br label %while.cond
     [no debug info]:50:3:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:3:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:3:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:3:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:3:  ret i32 %26
     [no debug info]:221:3:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:3:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:3:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:3:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:3:  br label %for.cond8
     [no debug info]:228:3:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:3:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:3:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:3:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:3:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:3:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:3:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:3:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:3:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:3:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:197:2:  br label %for.cond
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:3:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:3:  %div = sdiv i32 %1, 10
     [no debug info]:137:3:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:3:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:3:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:3:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:186:2:  %2 = load i32, i32* %m, align 4
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:3:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:3:  %div = sdiv i32 %1, 10
     [no debug info]:187:2:  %tobool = icmp ne i32 %2, 0
     [no debug info]:137:3:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:3:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:3:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:3:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:188:2:  %3 = load i32, i32* %L, align 4
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:189:2:  br i1 %tobool, label %for.body, label %for.end
     [no debug info]:200:4:  %5 = load i32, i32* %n.addr, align 4
     [no debug info]:201:4:  %mul = mul nsw i32 %3, %5
     [no debug info]:202:4:  %div1 = sdiv i32 %mul, 6
     [no debug info]:192:2:  %inc = add nsw i32 %3, 1
     [no debug info]:203:4:  %add = add nsw i32 %div1, 1
     [no debug info]:204:4:  store i32 %add, i32* %L, align 4
     [no debug info]:205:4:  %6 = load i32, i32* %L, align 4
     [no debug info]:206:4:  %conv = sext i32 %6 to i64
     [no debug info]:207:4:  %mul2 = mul i64 %conv, 4
     [no debug info]:208:4:  %call = call i8* @malloc(i64 %mul2)
     [no debug info]:209:5:  %7 = bitcast i8* %call to i32*
     [no debug info]:193:2:  store i32 %inc, i32* %L, align 4
     [no debug info]:210:5:  store i32* %7, i32** %a, align 8
     [no debug info]:211:5:  %8 = load i32*, i32** %a, align 8
     [no debug info]:212:5:  %tobool3 = icmp ne i32* %8, null
     [no debug info]:135:3:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:213:5:  br i1 %tobool3, label %if.end5, label %for.end13
     [no debug info]:216:5:  %9 = load i32*, i32** %a, align 8
     [no debug info]:217:5:  %10 = load i32, i32* %L, align 4
     [no debug info]:136:3:  %div = sdiv i32 %1, 10
     [no debug info]:218:5:  %11 = load i32, i32* %n.addr, align 4
     [no debug info]:219:5:  %conv6 = sext i32 %11 to i64
     [no debug info]:220:5:  %call7 = call i32 @calc_fac(i32* %9, i32 %10, i64 %conv6)
     [no debug info]:137:3:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:12:5:  %a.addr = alloca i32*, align 8
     [no debug info]:13:5:  %L.addr = alloca i32, align 4
     [no debug info]:14:5:  %n.addr = alloca i64, align 8
     [no debug info]:138:3:  %sub = sub nsw i32 %2, 1
     [no debug info]:15:5:  %b = alloca i64, align 8
     [no debug info]:16:5:  %c = alloca i64, align 8
     [no debug info]:17:5:  %i = alloca i32, align 4
     [no debug info]:139:3:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:18:5:  %l = alloca i32, align 4
     [no debug info]:19:5:  store i32* %a, i32** %a.addr, align 8
     [no debug info]:20:5:  store i32 %L, i32* %L.addr, align 4
     [no debug info]:140:3:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:21:5:  store i64 %n, i64* %n.addr, align 8
     [no debug info]:22:5:  %0 = load i32*, i32** %a.addr, align 8
     [no debug info]:23:5:  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:24:5:  store i32 1, i32* %arrayidx, align 4
     [no debug info]:25:5:  store i32 1, i32* %i, align 4
     [no debug info]:26:5:  br label %for.cond
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:29:5:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:5:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:31:5:  %cmp = icmp slt i32 %1, %2
     [no debug info]:194:2:  %4 = load i32, i32* %m, align 4
     [no debug info]:32:5:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:35:5:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:36:5:  %4 = load i32, i32* %i, align 4
     [no debug info]:209:4:  %7 = bitcast i8* %call to i32*
     [no debug info]:37:5:  %idxprom = sext i32 %4 to i64
     [no debug info]:38:5:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:39:5:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:40:5:  %5 = load i32, i32* %i, align 4
     [no debug info]:41:5:  %inc = add nsw i32 %5, 1
     [no debug info]:42:5:  store i32 %inc, i32* %i, align 4
     [no debug info]:195:2:  %div = sdiv i32 %4, 10
     [no debug info]:43:5:  br label %for.cond
     [no debug info]:29:5:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:5:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:31:5:  %cmp = icmp slt i32 %1, %2
     [no debug info]:32:5:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:46:5:  store i32 1, i32* %l, align 4
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:47:5:  br label %while.cond
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:196:2:  store i32 %div, i32* %m, align 4
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:197:2:  br label %for.cond
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:210:4:  store i32* %7, i32** %a, align 8
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:135:3:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:136:3:  %div = sdiv i32 %1, 10
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:186:2:  %2 = load i32, i32* %m, align 4
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:211:4:  %8 = load i32*, i32** %a, align 8
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:212:4:  %tobool3 = icmp ne i32* %8, null
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:137:3:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:187:2:  %tobool = icmp ne i32 %2, 0
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:188:2:  %3 = load i32, i32* %L, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:189:2:  br i1 %tobool, label %for.body, label %for.end
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:138:3:  %sub = sub nsw i32 %2, 1
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:139:3:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:140:3:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:200:2:  %5 = load i32, i32* %n.addr, align 4
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:213:4:  br i1 %tobool3, label %if.end5, label %for.end13
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:201:2:  %mul = mul nsw i32 %3, %5
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:202:2:  %div1 = sdiv i32 %mul, 6
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:203:2:  %add = add nsw i32 %div1, 1
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:204:2:  store i32 %add, i32* %L, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:205:2:  %6 = load i32, i32* %L, align 4
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:206:2:  %conv = sext i32 %6 to i64
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:135:3:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:136:3:  %div = sdiv i32 %1, 10
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:216:4:  %9 = load i32*, i32** %a, align 8
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:137:3:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:138:3:  %sub = sub nsw i32 %2, 1
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:207:2:  %mul2 = mul i64 %conv, 4
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:139:3:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:140:3:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:208:2:  %call = call i8* @malloc(i64 %mul2)
     [no debug info]:209:6:  %7 = bitcast i8* %call to i32*
     [no debug info]:210:6:  store i32* %7, i32** %a, align 8
     [no debug info]:211:6:  %8 = load i32*, i32** %a, align 8
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:212:6:  %tobool3 = icmp ne i32* %8, null
     [no debug info]:213:6:  br i1 %tobool3, label %if.end5, label %for.end13
     [no debug info]:216:6:  %9 = load i32*, i32** %a, align 8
     [no debug info]:209:2:  %7 = bitcast i8* %call to i32*
     [no debug info]:217:6:  %10 = load i32, i32* %L, align 4
     [no debug info]:218:6:  %11 = load i32, i32* %n.addr, align 4
     [no debug info]:219:6:  %conv6 = sext i32 %11 to i64
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:220:6:  %call7 = call i32 @calc_fac(i32* %9, i32 %10, i64 %conv6)
     [no debug info]:12:6:  %a.addr = alloca i32*, align 8
     [no debug info]:13:6:  %L.addr = alloca i32, align 4
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:14:6:  %n.addr = alloca i64, align 8
     [no debug info]:15:6:  %b = alloca i64, align 8
     [no debug info]:16:6:  %c = alloca i64, align 8
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:17:6:  %i = alloca i32, align 4
     [no debug info]:18:6:  %l = alloca i32, align 4
     [no debug info]:19:6:  store i32* %a, i32** %a.addr, align 8
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:20:6:  store i32 %L, i32* %L.addr, align 4
     [no debug info]:21:6:  store i64 %n, i64* %n.addr, align 8
     [no debug info]:22:6:  %0 = load i32*, i32** %a.addr, align 8
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:23:6:  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
     [no debug info]:24:6:  store i32 1, i32* %arrayidx, align 4
     [no debug info]:25:6:  store i32 1, i32* %i, align 4
     [no debug info]:217:4:  %10 = load i32, i32* %L, align 4
     [no debug info]:26:6:  br label %for.cond
     [no debug info]:29:6:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:6:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:31:6:  %cmp = icmp slt i32 %1, %2
     [no debug info]:32:6:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:35:6:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:36:6:  %4 = load i32, i32* %i, align 4
     [no debug info]:37:6:  %idxprom = sext i32 %4 to i64
     [no debug info]:38:6:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:39:6:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:40:6:  %5 = load i32, i32* %i, align 4
     [no debug info]:41:6:  %inc = add nsw i32 %5, 1
     [no debug info]:42:6:  store i32 %inc, i32* %i, align 4
     [no debug info]:43:6:  br label %for.cond
     [no debug info]:29:6:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:6:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:210:2:  store i32* %7, i32** %a, align 8
     [no debug info]:31:6:  %cmp = icmp slt i32 %1, %2
     [no debug info]:32:6:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:35:6:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:36:6:  %4 = load i32, i32* %i, align 4
     [no debug info]:37:6:  %idxprom = sext i32 %4 to i64
     [no debug info]:38:6:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:39:6:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:40:6:  %5 = load i32, i32* %i, align 4
     [no debug info]:41:6:  %inc = add nsw i32 %5, 1
     [no debug info]:218:4:  %11 = load i32, i32* %n.addr, align 4
     [no debug info]:42:6:  store i32 %inc, i32* %i, align 4
     [no debug info]:43:6:  br label %for.cond
     [no debug info]:29:6:  %1 = load i32, i32* %i, align 4
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:30:6:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:31:6:  %cmp = icmp slt i32 %1, %2
     [no debug info]:32:6:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:135:3:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:35:6:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:36:6:  %4 = load i32, i32* %i, align 4
     [no debug info]:37:6:  %idxprom = sext i32 %4 to i64
     [no debug info]:136:3:  %div = sdiv i32 %1, 10
     [no debug info]:38:6:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:39:6:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:40:6:  %5 = load i32, i32* %i, align 4
     [no debug info]:137:3:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:41:6:  %inc = add nsw i32 %5, 1
     [no debug info]:42:6:  store i32 %inc, i32* %i, align 4
     [no debug info]:43:6:  br label %for.cond
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:29:6:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:6:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:31:6:  %cmp = icmp slt i32 %1, %2
     [no debug info]:138:3:  %sub = sub nsw i32 %2, 1
     [no debug info]:32:6:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:35:6:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:36:6:  %4 = load i32, i32* %i, align 4
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:37:6:  %idxprom = sext i32 %4 to i64
     [no debug info]:38:6:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:39:6:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:139:3:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:40:6:  %5 = load i32, i32* %i, align 4
     [no debug info]:41:6:  %inc = add nsw i32 %5, 1
     [no debug info]:42:6:  store i32 %inc, i32* %i, align 4
     [no debug info]:140:3:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:43:6:  br label %for.cond
     [no debug info]:29:6:  %1 = load i32, i32* %i, align 4
     [no debug info]:30:6:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:123:3:  %n.addr = alloca i32, align 4
     [no debug info]:31:6:  %cmp = icmp slt i32 %1, %2
     [no debug info]:32:6:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:46:6:  store i32 1, i32* %l, align 4
     [no debug info]:47:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:124:3:  %c.addr = alloca i32, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:219:4:  %conv6 = sext i32 %11 to i64
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:125:3:  %r.addr = alloca i8*, align 8
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:126:3:  %d = alloca i32, align 4
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:127:3:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:220:4:  %call7 = call i32 @calc_fac(i32* %9, i32 %10, i64 %conv6)
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:12:4:  %a.addr = alloca i32*, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:128:3:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:13:4:  %L.addr = alloca i32, align 4
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:211:2:  %8 = load i32*, i32** %a, align 8
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:129:3:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:14:4:  %n.addr = alloca i64, align 8
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:130:3:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:131:3:  %cmp = icmp sle i32 %0, 0
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:15:4:  %b = alloca i64, align 8
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:132:3:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:162:3:  ret void
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:141:3:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:142:3:  %rem = srem i32 %4, 10
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:16:4:  %c = alloca i64, align 8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:212:2:  %tobool3 = icmp ne i32* %8, null
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:143:3:  store i32 %rem, i32* %d, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:144:3:  %5 = load i32, i32* @h, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:145:3:  %tobool = icmp ne i32 %5, 0
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:146:3:  %6 = load i32, i32* %d, align 4
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:147:3:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:148:3:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:149:3:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:162:3:  ret void
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:17:4:  %i = alloca i32, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:141:3:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:142:3:  %rem = srem i32 %4, 10
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:143:3:  store i32 %rem, i32* %d, align 4
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:144:3:  %5 = load i32, i32* @h, align 4
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:145:3:  %tobool = icmp ne i32 %5, 0
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:146:3:  %6 = load i32, i32* %d, align 4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:213:2:  br i1 %tobool3, label %if.end5, label %for.end13
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:216:2:  %9 = load i32*, i32** %a, align 8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:18:4:  %l = alloca i32, align 4
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:147:3:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:148:3:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:149:3:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:19:4:  store i32* %a, i32** %a.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:162:3:  ret void
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:141:3:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:142:3:  %rem = srem i32 %4, 10
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:217:2:  %10 = load i32, i32* %L, align 4
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:143:3:  store i32 %rem, i32* %d, align 4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:20:4:  store i32 %L, i32* %L.addr, align 4
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:144:3:  %5 = load i32, i32* @h, align 4
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:145:3:  %tobool = icmp ne i32 %5, 0
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:21:4:  store i64 %n, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:146:3:  %6 = load i32, i32* %d, align 4
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:147:3:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:148:3:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:218:2:  %11 = load i32, i32* %n.addr, align 4
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:149:3:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:22:4:  %0 = load i32*, i32** %a.addr, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:23:4:  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:162:3:  ret void
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:141:3:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:142:3:  %rem = srem i32 %4, 10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:143:3:  store i32 %rem, i32* %d, align 4
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:144:3:  %5 = load i32, i32* @h, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:145:3:  %tobool = icmp ne i32 %5, 0
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:146:3:  %6 = load i32, i32* %d, align 4
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:219:2:  %conv6 = sext i32 %11 to i64
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:147:3:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:148:3:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:149:3:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:162:3:  ret void
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:141:3:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:142:3:  %rem = srem i32 %4, 10
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:143:3:  store i32 %rem, i32* %d, align 4
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:144:3:  %5 = load i32, i32* @h, align 4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:145:3:  %tobool = icmp ne i32 %5, 0
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:220:2:  %call7 = call i32 @calc_fac(i32* %9, i32 %10, i64 %conv6)
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:146:3:  %6 = load i32, i32* %d, align 4
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:147:3:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:12:2:  %a.addr = alloca i32*, align 8
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:148:3:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:149:3:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:13:2:  %L.addr = alloca i32, align 4
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:14:2:  %n.addr = alloca i64, align 8
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:162:3:  ret void
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:141:3:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:142:3:  %rem = srem i32 %4, 10
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:24:4:  store i32 1, i32* %arrayidx, align 4
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:143:3:  store i32 %rem, i32* %d, align 4
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:144:3:  %5 = load i32, i32* @h, align 4
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:15:2:  %b = alloca i64, align 8
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:25:4:  store i32 1, i32* %i, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:145:3:  %tobool = icmp ne i32 %5, 0
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:26:4:  br label %for.cond
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:16:2:  %c = alloca i64, align 8
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:146:3:  %6 = load i32, i32* %d, align 4
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:147:3:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:148:3:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:149:3:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:152:3:  %7 = load i32, i32* %d, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:29:4:  %1 = load i32, i32* %i, align 4
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:17:2:  %i = alloca i32, align 4
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:30:4:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:153:3:  %add = add nsw i32 48, %7
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:154:3:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:18:2:  %l = alloca i32, align 4
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:155:3:  %idx.ext = sext i32 %add to i64
     [no debug info]:99:7:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:7:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:7:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:156:3:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:102:7:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:7:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:7:  %dec = add i64 %25, -1
     [no debug info]:157:3:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:112:7:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:7:  br label %while.cond
     [no debug info]:50:7:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:19:2:  store i32* %a, i32** %a.addr, align 8
     [no debug info]:51:7:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:7:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:7:  store i64 0, i64* %c, align 8
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:56:7:  store i32 0, i32* %i, align 4
     [no debug info]:57:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:158:3:  store i32 1, i32* @h, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:159:3:  br label %if.end3
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:162:3:  ret void
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:240:3:  %18 = load i32, i32* %i, align 4
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:31:4:  %cmp = icmp slt i32 %1, %2
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:241:3:  %dec = add nsw i32 %18, -1
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:20:2:  store i32 %L, i32* %L.addr, align 4
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:242:3:  store i32 %dec, i32* %i, align 4
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:8:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:8:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:8:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:21:2:  store i64 %n, i64* %n.addr, align 8
     [no debug info]:102:8:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:8:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:8:  %dec = add i64 %25, -1
     [no debug info]:22:2:  %0 = load i32*, i32** %a.addr, align 8
     [no debug info]:112:8:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:8:  br label %while.cond
     [no debug info]:50:8:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:32:4:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:51:8:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:8:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:8:  store i64 0, i64* %c, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:56:8:  store i32 0, i32* %i, align 4
     [no debug info]:57:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:243:3:  br label %for.cond8
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:8:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:228:3:  %13 = load i32, i32* %i, align 4
     [no debug info]:70:8:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:8:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:73:8:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:8:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:8:  %conv = zext i32 %14 to i64
     [no debug info]:229:3:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:76:8:  %mul = mul i64 %11, %conv
     [no debug info]:77:8:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:8:  %add = add i64 %mul, %15
     [no debug info]:23:2:  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0
     [no debug info]:79:8:  store i64 %add, i64* %b, align 8
     [no debug info]:80:8:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:8:  %div = udiv i64 %16, 100000000
     [no debug info]:230:3:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:82:8:  store i64 %div, i64* %c, align 8
     [no debug info]:83:8:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:8:  %18 = load i64, i64* %c, align 8
     [no debug info]:246:3:  ret void
     [no debug info]:85:8:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:8:  %sub = sub i64 %17, %mul8
     [no debug info]:87:8:  %conv9 = trunc i64 %sub to i32
     [no debug info]:46:4:  store i32 1, i32* %l, align 4
     [no debug info]:88:8:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:8:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:8:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:268:3:  ret i32 0
     [no debug info]:91:8:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:8:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:8:  %21 = load i32, i32* %i, align 4
     [no debug info]:24:2:  store i32 1, i32* %arrayidx, align 4
     [no debug info]:94:8:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:8:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:25:2:  store i32 1, i32* %i, align 4
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:8:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:8:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:8:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:47:4:  br label %while.cond
     [no debug info]:73:8:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:8:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:8:  %conv = zext i32 %14 to i64
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:76:8:  %mul = mul i64 %11, %conv
     [no debug info]:77:8:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:8:  %add = add i64 %mul, %15
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:79:8:  store i64 %add, i64* %b, align 8
     [no debug info]:80:8:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:8:  %div = udiv i64 %16, 100000000
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:82:8:  store i64 %div, i64* %c, align 8
     [no debug info]:83:8:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:8:  %18 = load i64, i64* %c, align 8
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:85:8:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:8:  %sub = sub i64 %17, %mul8
     [no debug info]:87:8:  %conv9 = trunc i64 %sub to i32
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:88:8:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:8:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:8:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:26:2:  br label %for.cond
     [no debug info]:91:8:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:8:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:8:  %21 = load i32, i32* %i, align 4
     [no debug info]:29:2:  %1 = load i32, i32* %i, align 4
     [no debug info]:94:8:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:8:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:8:  br label %for.cond2
     [no debug info]:30:2:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:8:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:8:  %23 = load i32, i32* %l, align 4
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:101:8:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:8:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:105:8:  %24 = load i32, i32* %i, align 4
     [no debug info]:31:2:  %cmp = icmp slt i32 %1, %2
     [no debug info]:106:8:  store i32 %24, i32* %l, align 4
     [no debug info]:107:8:  br label %if.end
     [no debug info]:110:8:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:32:2:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:111:8:  %dec = add i64 %25, -1
     [no debug info]:112:8:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:8:  br label %while.cond
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:50:8:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:8:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:8:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:55:8:  store i64 0, i64* %c, align 8
     [no debug info]:56:8:  store i32 0, i32* %i, align 4
     [no debug info]:57:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:35:2:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:36:2:  %4 = load i32, i32* %i, align 4
     [no debug info]:69:8:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:8:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:37:2:  %idxprom = sext i32 %4 to i64
     [no debug info]:72:8:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:8:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:8:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:8:  %conv = zext i32 %14 to i64
     [no debug info]:76:8:  %mul = mul i64 %11, %conv
     [no debug info]:77:8:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:8:  %add = add i64 %mul, %15
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:79:8:  store i64 %add, i64* %b, align 8
     [no debug info]:80:8:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:8:  %div = udiv i64 %16, 100000000
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:82:8:  store i64 %div, i64* %c, align 8
     [no debug info]:83:8:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:8:  %18 = load i64, i64* %c, align 8
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:85:8:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:8:  %sub = sub i64 %17, %mul8
     [no debug info]:87:8:  %conv9 = trunc i64 %sub to i32
     [no debug info]:50:4:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:88:8:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:8:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:8:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:51:4:  %tobool = icmp ne i64 %6, 0
     [no debug info]:91:8:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:8:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:8:  %21 = load i32, i32* %i, align 4
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:94:8:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:8:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:8:  br label %for.cond2
     [no debug info]:38:2:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:39:2:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:8:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:8:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:52:4:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:71:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:8:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:8:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:74:8:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:8:  %conv = zext i32 %14 to i64
     [no debug info]:76:8:  %mul = mul i64 %11, %conv
     [no debug info]:40:2:  %5 = load i32, i32* %i, align 4
     [no debug info]:77:8:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:8:  %add = add i64 %mul, %15
     [no debug info]:79:8:  store i64 %add, i64* %b, align 8
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:80:8:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:8:  %div = udiv i64 %16, 100000000
     [no debug info]:82:8:  store i64 %div, i64* %c, align 8
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:83:8:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:8:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:8:  %mul8 = mul i64 %18, 100000000
     [no debug info]:41:2:  %inc = add nsw i32 %5, 1
     [no debug info]:86:8:  %sub = sub i64 %17, %mul8
     [no debug info]:87:8:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:8:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:89:8:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:8:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:8:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:42:2:  store i32 %inc, i32* %i, align 4
     [no debug info]:92:8:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:8:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:8:  %inc13 = add nsw i32 %21, 1
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:95:8:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:43:2:  br label %for.cond
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:55:4:  store i64 0, i64* %c, align 8
     [no debug info]:99:8:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:8:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:8:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:102:8:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:8:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:8:  %dec = add i64 %25, -1
     [no debug info]:56:4:  store i32 0, i32* %i, align 4
     [no debug info]:112:8:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:8:  br label %while.cond
     [no debug info]:50:8:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:29:2:  %1 = load i32, i32* %i, align 4
     [no debug info]:51:8:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:8:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:8:  store i64 0, i64* %c, align 8
     [no debug info]:57:4:  br label %for.cond2
     [no debug info]:56:8:  store i32 0, i32* %i, align 4
     [no debug info]:57:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:8:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:8:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:71:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:8:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:8:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:74:8:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:8:  %conv = zext i32 %14 to i64
     [no debug info]:76:8:  %mul = mul i64 %11, %conv
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:77:8:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:8:  %add = add i64 %mul, %15
     [no debug info]:79:8:  store i64 %add, i64* %b, align 8
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:8:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:8:  %div = udiv i64 %16, 100000000
     [no debug info]:82:8:  store i64 %div, i64* %c, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:83:8:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:8:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:8:  %mul8 = mul i64 %18, 100000000
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:86:8:  %sub = sub i64 %17, %mul8
     [no debug info]:87:8:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:8:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:89:8:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:8:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:8:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:30:2:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:92:8:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:8:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:8:  %inc13 = add nsw i32 %21, 1
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:95:8:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:31:2:  %cmp = icmp slt i32 %1, %2
     [no debug info]:69:8:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:8:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:72:8:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:8:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:8:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:75:8:  %conv = zext i32 %14 to i64
     [no debug info]:76:8:  %mul = mul i64 %11, %conv
     [no debug info]:77:8:  %15 = load i64, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:78:8:  %add = add i64 %mul, %15
     [no debug info]:79:8:  store i64 %add, i64* %b, align 8
     [no debug info]:80:8:  %16 = load i64, i64* %b, align 8
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:81:8:  %div = udiv i64 %16, 100000000
     [no debug info]:82:8:  store i64 %div, i64* %c, align 8
     [no debug info]:83:8:  %17 = load i64, i64* %b, align 8
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:84:8:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:8:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:8:  %sub = sub i64 %17, %mul8
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:87:8:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:8:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:8:  %20 = load i32, i32* %i, align 4
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:90:8:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:8:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:8:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:32:2:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:93:8:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:8:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:8:  store i32 %inc13, i32* %i, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:96:8:  br label %for.cond2
     [no debug info]:60:8:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:8:  %8 = load i32, i32* %l, align 4
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:62:8:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:8:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:8:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:8:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:8:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:8:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:8:  %23 = load i32, i32* %l, align 4
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:101:8:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:8:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:8:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:111:8:  %dec = add i64 %25, -1
     [no debug info]:112:8:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:8:  br label %while.cond
     [no debug info]:50:8:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:8:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:8:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:8:  %26 = load i32, i32* %l, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:117:8:  ret i32 %26
     [no debug info]:221:8:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:8:  %12 = load i32, i32* %L, align 4
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:223:8:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:8:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:8:  br label %for.cond8
     [no debug info]:228:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:8:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:8:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:8:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:8:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:8:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:8:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:8:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:238:8:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:8:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:35:2:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:69:4:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:70:4:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:71:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:72:4:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:36:2:  %4 = load i32, i32* %i, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:37:2:  %idxprom = sext i32 %4 to i64
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:73:4:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:38:2:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:39:2:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:74:4:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:75:4:  %conv = zext i32 %14 to i64
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:76:4:  %mul = mul i64 %11, %conv
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:40:2:  %5 = load i32, i32* %i, align 4
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:77:4:  %15 = load i64, i64* %c, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:41:2:  %inc = add nsw i32 %5, 1
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:42:2:  store i32 %inc, i32* %i, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:43:2:  br label %for.cond
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:29:2:  %1 = load i32, i32* %i, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:30:2:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:31:2:  %cmp = icmp slt i32 %1, %2
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:32:2:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:35:2:  %3 = load i32*, i32** %a.addr, align 8
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:36:2:  %4 = load i32, i32* %i, align 4
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:37:2:  %idxprom = sext i32 %4 to i64
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:78:4:  %add = add i64 %mul, %15
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:79:4:  store i64 %add, i64* %b, align 8
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:38:2:  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 %idxprom
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:240:8:  %18 = load i32, i32* %i, align 4
     [no debug info]:80:4:  %16 = load i64, i64* %b, align 8
     [no debug info]:241:8:  %dec = add nsw i32 %18, -1
     [no debug info]:242:8:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:8:  br label %for.cond8
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:228:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:8:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:8:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:81:4:  %div = udiv i64 %16, 100000000
     [no debug info]:233:8:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:8:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:8:  %idxprom = sext i32 %15 to i64
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:236:8:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:8:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:8:  %17 = load i8*, i8** %s, align 8
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:239:8:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:82:4:  store i64 %div, i64* %c, align 8
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:39:2:  store i32 0, i32* %arrayidx1, align 4
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:83:4:  %17 = load i64, i64* %b, align 8
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:40:2:  %5 = load i32, i32* %i, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:41:2:  %inc = add nsw i32 %5, 1
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:84:4:  %18 = load i64, i64* %c, align 8
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:42:2:  store i32 %inc, i32* %i, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:85:4:  %mul8 = mul i64 %18, 100000000
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:86:4:  %sub = sub i64 %17, %mul8
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:43:2:  br label %for.cond
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:29:2:  %1 = load i32, i32* %i, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:30:2:  %2 = load i32, i32* %L.addr, align 4
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:87:4:  %conv9 = trunc i64 %sub to i32
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:88:4:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:31:2:  %cmp = icmp slt i32 %1, %2
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:32:2:  br i1 %cmp, label %for.body, label %for.end
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:8:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:136:8:  %div = sdiv i32 %1, 10
     [no debug info]:137:8:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:8:  %sub = sub nsw i32 %2, 1
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:139:8:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:8:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:8:  %n.addr = alloca i32, align 4
     [no debug info]:46:2:  store i32 1, i32* %l, align 4
     [no debug info]:124:8:  %c.addr = alloca i32, align 4
     [no debug info]:125:8:  %r.addr = alloca i8*, align 8
     [no debug info]:126:8:  %d = alloca i32, align 4
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:127:8:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:8:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:8:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:130:8:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:8:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:8:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:47:2:  br label %while.cond
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:89:4:  %20 = load i32, i32* %i, align 4
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:90:4:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:91:4:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:92:4:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:93:4:  %21 = load i32, i32* %i, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:94:4:  %inc13 = add nsw i32 %21, 1
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:95:4:  store i32 %inc13, i32* %i, align 4
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:96:4:  br label %for.cond2
     [no debug info]:162:8:  ret void
     [no debug info]:141:8:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:8:  %rem = srem i32 %4, 10
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:143:8:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:8:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:8:  %tobool = icmp ne i32 %5, 0
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:146:8:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:8:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:8:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:149:8:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:8:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:8:  %add = add nsw i32 48, %7
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:154:8:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:8:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:8:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:157:8:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:8:  store i32 1, i32* @h, align 4
     [no debug info]:159:8:  br label %if.end3
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:162:8:  ret void
     [no debug info]:240:8:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:8:  %dec = add nsw i32 %18, -1
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:242:8:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:8:  br label %for.cond8
     [no debug info]:228:8:  %13 = load i32, i32* %i, align 4
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:229:8:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:8:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:8:  ret void
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:268:8:  ret i32 0
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:7:  %22 = load i32, i32* %i, align 4
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:100:7:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:7:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:7:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:105:7:  %24 = load i32, i32* %i, align 4
     [no debug info]:106:7:  store i32 %24, i32* %l, align 4
     [no debug info]:107:7:  br label %if.end
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:110:7:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:7:  %dec = add i64 %25, -1
     [no debug info]:112:7:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:113:7:  br label %while.cond
     [no debug info]:50:7:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:7:  %tobool = icmp ne i64 %6, 0
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:52:7:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:7:  store i64 0, i64* %c, align 8
     [no debug info]:56:7:  store i32 0, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:57:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:105:6:  %24 = load i32, i32* %i, align 4
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:99:4:  %22 = load i32, i32* %i, align 4
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:100:4:  %23 = load i32, i32* %l, align 4
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:7:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:7:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:7:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:7:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:7:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:7:  %dec = add i64 %25, -1
     [no debug info]:101:4:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:112:7:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:7:  br label %while.cond
     [no debug info]:50:7:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:102:4:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:51:7:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:7:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:7:  store i64 0, i64* %c, align 8
     [no debug info]:110:4:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:56:7:  store i32 0, i32* %i, align 4
     [no debug info]:57:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:106:6:  store i32 %24, i32* %l, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:107:6:  br label %if.end
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:111:4:  %dec = add i64 %25, -1
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:112:4:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:113:4:  br label %while.cond
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:50:4:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:51:4:  %tobool = icmp ne i64 %6, 0
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:52:4:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:9:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:9:  ret i32 %26
     [no debug info]:221:9:  store i32 %call7, i32* %L, align 4
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:222:9:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:9:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:9:  store i32 %sub, i32* %i, align 4
     [no debug info]:55:4:  store i64 0, i64* %c, align 8
     [no debug info]:225:9:  br label %for.cond8
     [no debug info]:228:9:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:9:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:230:9:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:9:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:9:  %15 = load i32, i32* %i, align 4
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:235:9:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:9:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:9:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:238:9:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:9:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:9:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:9:  %div = sdiv i32 %1, 10
     [no debug info]:137:9:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:9:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:9:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:9:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:56:4:  store i32 0, i32* %i, align 4
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:9:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:136:9:  %div = sdiv i32 %1, 10
     [no debug info]:137:9:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:9:  %sub = sub nsw i32 %2, 1
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:139:9:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:9:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:57:4:  br label %for.cond2
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:9:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:136:9:  %div = sdiv i32 %1, 10
     [no debug info]:137:9:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:9:  %sub = sub nsw i32 %2, 1
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:139:9:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:9:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:9:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:9:  %div = sdiv i32 %1, 10
     [no debug info]:137:9:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:9:  %sub = sub nsw i32 %2, 1
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:139:9:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:9:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:135:9:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:9:  %div = sdiv i32 %1, 10
     [no debug info]:137:9:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:138:9:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:9:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:9:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:9:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:136:9:  %div = sdiv i32 %1, 10
     [no debug info]:137:9:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:9:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:9:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:9:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:9:  %n.addr = alloca i32, align 4
     [no debug info]:124:9:  %c.addr = alloca i32, align 4
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:125:9:  %r.addr = alloca i8*, align 8
     [no debug info]:126:9:  %d = alloca i32, align 4
     [no debug info]:127:9:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:128:9:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:9:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:9:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:131:9:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:9:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:9:  ret void
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:141:9:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:9:  %rem = srem i32 %4, 10
     [no debug info]:143:9:  store i32 %rem, i32* %d, align 4
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:144:9:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:9:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:9:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:9:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:9:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:9:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:9:  ret void
     [no debug info]:141:9:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:9:  %rem = srem i32 %4, 10
     [no debug info]:143:9:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:9:  %5 = load i32, i32* @h, align 4
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:145:9:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:9:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:9:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:148:9:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:9:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:9:  ret void
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:141:9:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:9:  %rem = srem i32 %4, 10
     [no debug info]:143:9:  store i32 %rem, i32* %d, align 4
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:144:9:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:9:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:9:  %6 = load i32, i32* %d, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:147:9:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:9:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:9:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:162:9:  ret void
     [no debug info]:141:9:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:9:  %rem = srem i32 %4, 10
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:143:9:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:9:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:9:  %tobool = icmp ne i32 %5, 0
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:146:9:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:9:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:9:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:149:9:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:9:  ret void
     [no debug info]:141:9:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:142:9:  %rem = srem i32 %4, 10
     [no debug info]:143:9:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:9:  %5 = load i32, i32* @h, align 4
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:145:9:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:9:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:9:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:148:9:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:9:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:9:  ret void
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:141:9:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:9:  %rem = srem i32 %4, 10
     [no debug info]:143:9:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:9:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:9:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:9:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:9:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:148:9:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:9:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:9:  %7 = load i32, i32* %d, align 4
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:153:9:  %add = add nsw i32 48, %7
     [no debug info]:154:9:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:9:  %idx.ext = sext i32 %add to i64
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:156:9:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:9:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:9:  store i32 1, i32* @h, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:159:9:  br label %if.end3
     [no debug info]:162:9:  ret void
     [no debug info]:240:9:  %18 = load i32, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:241:9:  %dec = add nsw i32 %18, -1
     [no debug info]:242:9:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:9:  br label %for.cond8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:228:9:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:9:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:9:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:246:9:  ret void
     [no debug info]:268:9:  ret i32 0
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:7:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:7:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:7:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:7:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:7:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:111:7:  %dec = add i64 %25, -1
     [no debug info]:112:7:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:7:  br label %while.cond
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:50:7:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:7:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:7:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:55:7:  store i64 0, i64* %c, align 8
     [no debug info]:56:7:  store i32 0, i32* %i, align 4
     [no debug info]:57:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:69:4:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:70:4:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:7:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:7:  %23 = load i32, i32* %l, align 4
     [no debug info]:71:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:101:7:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:7:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:7:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:111:7:  %dec = add i64 %25, -1
     [no debug info]:112:7:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:7:  br label %while.cond
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:50:7:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:7:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:7:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:55:7:  store i64 0, i64* %c, align 8
     [no debug info]:56:7:  store i32 0, i32* %i, align 4
     [no debug info]:57:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:4:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:73:4:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:74:4:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:75:4:  %conv = zext i32 %14 to i64
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:7:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:7:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:76:4:  %mul = mul i64 %11, %conv
     [no debug info]:72:7:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:7:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:7:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:75:7:  %conv = zext i32 %14 to i64
     [no debug info]:76:7:  %mul = mul i64 %11, %conv
     [no debug info]:77:7:  %15 = load i64, i64* %c, align 8
     [no debug info]:77:4:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:7:  %add = add i64 %mul, %15
     [no debug info]:79:7:  store i64 %add, i64* %b, align 8
     [no debug info]:80:7:  %16 = load i64, i64* %b, align 8
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:81:7:  %div = udiv i64 %16, 100000000
     [no debug info]:82:7:  store i64 %div, i64* %c, align 8
     [no debug info]:83:7:  %17 = load i64, i64* %b, align 8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:84:7:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:7:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:7:  %sub = sub i64 %17, %mul8
     [no debug info]:78:4:  %add = add i64 %mul, %15
     [no debug info]:87:7:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:7:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:7:  %20 = load i32, i32* %i, align 4
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:90:7:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:7:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:7:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:79:4:  store i64 %add, i64* %b, align 8
     [no debug info]:93:7:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:7:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:7:  store i32 %inc13, i32* %i, align 4
     [no debug info]:80:4:  %16 = load i64, i64* %b, align 8
     [no debug info]:96:7:  br label %for.cond2
     [no debug info]:60:7:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:7:  %8 = load i32, i32* %l, align 4
     [no debug info]:81:4:  %div = udiv i64 %16, 100000000
     [no debug info]:62:7:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:7:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:7:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:65:7:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:7:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:7:  %22 = load i32, i32* %i, align 4
     [no debug info]:82:4:  store i64 %div, i64* %c, align 8
     [no debug info]:100:7:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:7:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:7:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:110:7:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:7:  %dec = add i64 %25, -1
     [no debug info]:112:7:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:83:4:  %17 = load i64, i64* %b, align 8
     [no debug info]:113:7:  br label %while.cond
     [no debug info]:50:7:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:7:  %tobool = icmp ne i64 %6, 0
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:7:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:7:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:7:  ret i32 %26
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:221:7:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:7:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:7:  %sub = sub nsw i32 %12, 1
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:224:7:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:7:  br label %for.cond8
     [no debug info]:228:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:229:7:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:7:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:7:  %14 = load i32*, i32** %a, align 8
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:234:7:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:7:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:7:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:237:7:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:7:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:7:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:84:4:  %18 = load i64, i64* %c, align 8
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:85:4:  %mul8 = mul i64 %18, 100000000
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:86:4:  %sub = sub i64 %17, %mul8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:87:4:  %conv9 = trunc i64 %sub to i32
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:88:4:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:89:4:  %20 = load i32, i32* %i, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:90:4:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:91:4:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:92:4:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:7:  ret void
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:93:4:  %21 = load i32, i32* %i, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:94:4:  %inc13 = add nsw i32 %21, 1
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:95:4:  store i32 %inc13, i32* %i, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:96:4:  br label %for.cond2
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:162:7:  ret void
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:240:7:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:7:  %dec = add nsw i32 %18, -1
     [no debug info]:242:7:  store i32 %dec, i32* %i, align 4
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:243:7:  br label %for.cond8
     [no debug info]:228:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:7:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:230:7:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:7:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:7:  %15 = load i32, i32* %i, align 4
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:235:7:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:7:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:7:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:238:7:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:7:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:99:4:  %22 = load i32, i32* %i, align 4
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:100:4:  %23 = load i32, i32* %l, align 4
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:101:4:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:7:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:7:  %div = sdiv i32 %1, 10
     [no debug info]:102:4:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:137:7:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:7:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:7:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:110:4:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:140:7:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:7:  %n.addr = alloca i32, align 4
     [no debug info]:124:7:  %c.addr = alloca i32, align 4
     [no debug info]:111:4:  %dec = add i64 %25, -1
     [no debug info]:125:7:  %r.addr = alloca i8*, align 8
     [no debug info]:126:7:  %d = alloca i32, align 4
     [no debug info]:127:7:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:128:7:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:7:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:7:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:112:4:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:131:7:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:7:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:7:  ret void
     [no debug info]:113:4:  br label %while.cond
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:50:4:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:51:4:  %tobool = icmp ne i64 %6, 0
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:52:4:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:10:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:10:  ret i32 %26
     [no debug info]:221:10:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:10:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:10:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:10:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:10:  br label %for.cond8
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:228:10:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:10:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:10:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:233:10:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:10:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:10:  %idxprom = sext i32 %15 to i64
     [no debug info]:55:4:  store i64 0, i64* %c, align 8
     [no debug info]:236:10:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:10:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:10:  %17 = load i8*, i8** %s, align 8
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:239:10:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:135:10:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:10:  %div = sdiv i32 %1, 10
     [no debug info]:137:10:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:138:10:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:10:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:10:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:56:4:  store i32 0, i32* %i, align 4
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:135:10:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:10:  %div = sdiv i32 %1, 10
     [no debug info]:137:10:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:10:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:10:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:10:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:57:4:  br label %for.cond2
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:10:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:136:10:  %div = sdiv i32 %1, 10
     [no debug info]:137:10:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:10:  %sub = sub nsw i32 %2, 1
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:139:10:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:10:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:10:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:136:10:  %div = sdiv i32 %1, 10
     [no debug info]:137:10:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:10:  %sub = sub nsw i32 %2, 1
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:139:10:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:10:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:135:10:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:10:  %div = sdiv i32 %1, 10
     [no debug info]:137:10:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:138:10:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:10:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:10:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:10:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:10:  %div = sdiv i32 %1, 10
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:137:10:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:10:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:10:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:10:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:10:  %n.addr = alloca i32, align 4
     [no debug info]:124:10:  %c.addr = alloca i32, align 4
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:125:10:  %r.addr = alloca i8*, align 8
     [no debug info]:126:10:  %d = alloca i32, align 4
     [no debug info]:127:10:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:128:10:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:10:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:10:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:131:10:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:10:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:10:  ret void
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:141:10:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:10:  %rem = srem i32 %4, 10
     [no debug info]:143:10:  store i32 %rem, i32* %d, align 4
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:144:10:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:10:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:10:  %6 = load i32, i32* %d, align 4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:147:10:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:10:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:10:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:162:10:  ret void
     [no debug info]:141:10:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:10:  %rem = srem i32 %4, 10
     [no debug info]:143:10:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:10:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:10:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:10:  %6 = load i32, i32* %d, align 4
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:147:10:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:10:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:10:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:162:10:  ret void
     [no debug info]:141:10:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:10:  %rem = srem i32 %4, 10
     [no debug info]:143:10:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:10:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:10:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:10:  %6 = load i32, i32* %d, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:147:10:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:10:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:10:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:162:10:  ret void
     [no debug info]:141:10:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:10:  %rem = srem i32 %4, 10
     [no debug info]:143:10:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:10:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:10:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:10:  %6 = load i32, i32* %d, align 4
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:147:10:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:10:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:10:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:162:10:  ret void
     [no debug info]:141:10:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:10:  %rem = srem i32 %4, 10
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:143:10:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:10:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:10:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:10:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:10:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:10:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:10:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:162:10:  ret void
     [no debug info]:141:10:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:10:  %rem = srem i32 %4, 10
     [no debug info]:143:10:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:10:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:10:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:10:  %6 = load i32, i32* %d, align 4
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:147:10:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:10:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:10:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:152:10:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:10:  %add = add nsw i32 48, %7
     [no debug info]:154:10:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:155:10:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:10:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:10:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:158:10:  store i32 1, i32* @h, align 4
     [no debug info]:159:10:  br label %if.end3
     [no debug info]:162:10:  ret void
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:240:10:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:10:  %dec = add nsw i32 %18, -1
     [no debug info]:242:10:  store i32 %dec, i32* %i, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:243:10:  br label %for.cond8
     [no debug info]:228:10:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:10:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:230:10:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:10:  ret void
     [no debug info]:268:10:  ret i32 0
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:69:4:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:162:7:  ret void
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:70:4:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:71:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:162:7:  ret void
     [no debug info]:141:7:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:7:  %rem = srem i32 %4, 10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:143:7:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:7:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:7:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:7:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:7:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:7:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:7:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:7:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:7:  %add = add nsw i32 48, %7
     [no debug info]:154:7:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:7:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:7:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:7:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:7:  store i32 1, i32* @h, align 4
     [no debug info]:159:7:  br label %if.end3
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:162:7:  ret void
     [no debug info]:240:7:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:7:  %dec = add nsw i32 %18, -1
     [no debug info]:242:7:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:7:  br label %for.cond8
     [no debug info]:228:7:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:7:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:7:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:7:  ret void
     [no debug info]:268:7:  ret i32 0
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:11:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:11:  ret i32 %26
     [no debug info]:221:11:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:11:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:11:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:11:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:11:  br label %for.cond8
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:228:11:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:11:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:11:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:233:11:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:11:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:11:  %idxprom = sext i32 %15 to i64
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:236:11:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:11:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:11:  %17 = load i8*, i8** %s, align 8
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:239:11:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:11:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:136:11:  %div = sdiv i32 %1, 10
     [no debug info]:137:11:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:11:  %sub = sub nsw i32 %2, 1
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:139:11:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:11:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:72:4:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:135:11:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:11:  %div = sdiv i32 %1, 10
     [no debug info]:137:11:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:138:11:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:11:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:11:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:73:4:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:74:4:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:11:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:11:  %div = sdiv i32 %1, 10
     [no debug info]:75:4:  %conv = zext i32 %14 to i64
     [no debug info]:137:11:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:11:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:11:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:140:11:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:76:4:  %mul = mul i64 %11, %conv
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:77:4:  %15 = load i64, i64* %c, align 8
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:11:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:136:11:  %div = sdiv i32 %1, 10
     [no debug info]:137:11:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:11:  %sub = sub nsw i32 %2, 1
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:139:11:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:11:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:11:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:136:11:  %div = sdiv i32 %1, 10
     [no debug info]:137:11:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:11:  %sub = sub nsw i32 %2, 1
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:139:11:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:11:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:11:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:11:  %div = sdiv i32 %1, 10
     [no debug info]:137:11:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:11:  %sub = sub nsw i32 %2, 1
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:139:11:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:11:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:11:  %n.addr = alloca i32, align 4
     [no debug info]:78:4:  %add = add i64 %mul, %15
     [no debug info]:124:11:  %c.addr = alloca i32, align 4
     [no debug info]:125:11:  %r.addr = alloca i8*, align 8
     [no debug info]:126:11:  %d = alloca i32, align 4
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:127:11:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:11:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:11:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:130:11:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:11:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:11:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:79:4:  store i64 %add, i64* %b, align 8
     [no debug info]:162:11:  ret void
     [no debug info]:141:11:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:11:  %rem = srem i32 %4, 10
     [no debug info]:143:11:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:11:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:11:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:11:  %6 = load i32, i32* %d, align 4
     [no debug info]:80:4:  %16 = load i64, i64* %b, align 8
     [no debug info]:147:11:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:11:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:11:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:11:  ret void
     [no debug info]:141:11:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:11:  %rem = srem i32 %4, 10
     [no debug info]:143:11:  store i32 %rem, i32* %d, align 4
     [no debug info]:81:4:  %div = udiv i64 %16, 100000000
     [no debug info]:144:11:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:11:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:11:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:11:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:11:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:11:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:11:  ret void
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:141:11:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:11:  %rem = srem i32 %4, 10
     [no debug info]:143:11:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:11:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:11:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:11:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:11:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:82:4:  store i64 %div, i64* %c, align 8
     [no debug info]:148:11:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:11:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:11:  ret void
     [no debug info]:141:11:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:11:  %rem = srem i32 %4, 10
     [no debug info]:143:11:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:11:  %5 = load i32, i32* @h, align 4
     [no debug info]:83:4:  %17 = load i64, i64* %b, align 8
     [no debug info]:145:11:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:11:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:11:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:11:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:11:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:11:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:11:  %add = add nsw i32 48, %7
     [no debug info]:84:4:  %18 = load i64, i64* %c, align 8
     [no debug info]:154:11:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:11:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:11:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:157:11:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:11:  store i32 1, i32* @h, align 4
     [no debug info]:159:11:  br label %if.end3
     [no debug info]:85:4:  %mul8 = mul i64 %18, 100000000
     [no debug info]:162:11:  ret void
     [no debug info]:141:11:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:11:  %rem = srem i32 %4, 10
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:143:11:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:11:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:11:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:11:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:11:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:11:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:11:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:152:11:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:11:  %add = add nsw i32 48, %7
     [no debug info]:154:11:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:155:11:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:11:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:11:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:86:4:  %sub = sub i64 %17, %mul8
     [no debug info]:158:11:  store i32 1, i32* @h, align 4
     [no debug info]:159:11:  br label %if.end3
     [no debug info]:162:11:  ret void
     [no debug info]:87:4:  %conv9 = trunc i64 %sub to i32
     [no debug info]:141:11:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:11:  %rem = srem i32 %4, 10
     [no debug info]:143:11:  store i32 %rem, i32* %d, align 4
     [no debug info]:88:4:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:144:11:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:11:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:11:  %6 = load i32, i32* %d, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:147:11:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:11:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:11:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:152:11:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:11:  %add = add nsw i32 48, %7
     [no debug info]:154:11:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:155:11:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:11:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:11:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:158:11:  store i32 1, i32* @h, align 4
     [no debug info]:159:11:  br label %if.end3
     [no debug info]:162:11:  ret void
     [no debug info]:89:4:  %20 = load i32, i32* %i, align 4
     [no debug info]:240:11:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:11:  %dec = add nsw i32 %18, -1
     [no debug info]:242:11:  store i32 %dec, i32* %i, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:243:11:  br label %for.cond8
     [no debug info]:228:11:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:11:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:230:11:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:11:  ret void
     [no debug info]:268:11:  ret i32 0
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:90:4:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:91:4:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:92:4:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:93:4:  %21 = load i32, i32* %i, align 4
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:94:4:  %inc13 = add nsw i32 %21, 1
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:95:4:  store i32 %inc13, i32* %i, align 4
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:96:4:  br label %for.cond2
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:99:4:  %22 = load i32, i32* %i, align 4
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:100:4:  %23 = load i32, i32* %l, align 4
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:101:4:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:102:4:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:110:4:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:111:4:  %dec = add i64 %25, -1
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:112:4:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:113:4:  br label %while.cond
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:50:4:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:51:4:  %tobool = icmp ne i64 %6, 0
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:52:4:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:12:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:12:  ret i32 %26
     [no debug info]:221:12:  store i32 %call7, i32* %L, align 4
     [no debug info]:55:4:  store i64 0, i64* %c, align 8
     [no debug info]:222:12:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:12:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:12:  store i32 %sub, i32* %i, align 4
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:225:12:  br label %for.cond8
     [no debug info]:228:12:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:12:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:12:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:12:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:12:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:12:  %idxprom = sext i32 %15 to i64
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:236:12:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:12:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:12:  %17 = load i8*, i8** %s, align 8
     [no debug info]:56:4:  store i32 0, i32* %i, align 4
     [no debug info]:239:12:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:57:4:  br label %for.cond2
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:12:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:12:  %div = sdiv i32 %1, 10
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:137:12:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:12:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:12:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:140:12:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:12:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:136:12:  %div = sdiv i32 %1, 10
     [no debug info]:137:12:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:12:  %sub = sub nsw i32 %2, 1
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:139:12:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:12:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:12:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:136:12:  %div = sdiv i32 %1, 10
     [no debug info]:137:12:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:12:  %sub = sub nsw i32 %2, 1
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:139:12:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:12:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:12:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:136:12:  %div = sdiv i32 %1, 10
     [no debug info]:137:12:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:12:  %sub = sub nsw i32 %2, 1
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:139:12:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:12:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:12:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:12:  %div = sdiv i32 %1, 10
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:137:12:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:12:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:12:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:140:12:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:12:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:12:  %div = sdiv i32 %1, 10
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:137:12:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:12:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:12:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:140:12:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:12:  %n.addr = alloca i32, align 4
     [no debug info]:124:12:  %c.addr = alloca i32, align 4
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:125:12:  %r.addr = alloca i8*, align 8
     [no debug info]:126:12:  %d = alloca i32, align 4
     [no debug info]:127:12:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:12:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:12:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:12:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:12:  %cmp = icmp sle i32 %0, 0
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:132:12:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:12:  ret void
     [no debug info]:141:12:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:142:12:  %rem = srem i32 %4, 10
     [no debug info]:143:12:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:12:  %5 = load i32, i32* @h, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:145:12:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:12:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:12:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:148:12:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:12:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:12:  ret void
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:141:12:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:12:  %rem = srem i32 %4, 10
     [no debug info]:143:12:  store i32 %rem, i32* %d, align 4
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:144:12:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:12:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:12:  %6 = load i32, i32* %d, align 4
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:147:12:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:12:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:12:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:162:12:  ret void
     [no debug info]:141:12:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:12:  %rem = srem i32 %4, 10
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:143:12:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:12:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:12:  %tobool = icmp ne i32 %5, 0
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:146:12:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:12:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:12:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:149:12:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:12:  ret void
     [no debug info]:141:12:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:142:12:  %rem = srem i32 %4, 10
     [no debug info]:143:12:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:12:  %5 = load i32, i32* @h, align 4
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:145:12:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:12:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:12:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:12:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:12:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:12:  ret void
     [no debug info]:141:12:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:142:12:  %rem = srem i32 %4, 10
     [no debug info]:143:12:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:12:  %5 = load i32, i32* @h, align 4
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:145:12:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:12:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:12:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:148:12:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:12:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:12:  ret void
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:141:12:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:12:  %rem = srem i32 %4, 10
     [no debug info]:143:12:  store i32 %rem, i32* %d, align 4
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:144:12:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:12:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:12:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:12:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:12:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:12:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:12:  %7 = load i32, i32* %d, align 4
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:153:12:  %add = add nsw i32 48, %7
     [no debug info]:154:12:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:12:  %idx.ext = sext i32 %add to i64
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:156:12:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:12:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:12:  store i32 1, i32* @h, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:159:12:  br label %if.end3
     [no debug info]:162:12:  ret void
     [no debug info]:240:12:  %18 = load i32, i32* %i, align 4
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:241:12:  %dec = add nsw i32 %18, -1
     [no debug info]:242:12:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:12:  br label %for.cond8
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:228:12:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:12:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:12:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:246:12:  ret void
     [no debug info]:268:12:  ret i32 0
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:13:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:13:  ret i32 %26
     [no debug info]:221:13:  store i32 %call7, i32* %L, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:222:13:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:13:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:13:  store i32 %sub, i32* %i, align 4
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:225:13:  br label %for.cond8
     [no debug info]:228:13:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:13:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:230:13:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:13:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:13:  %15 = load i32, i32* %i, align 4
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:235:13:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:13:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:13:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:238:13:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:13:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:13:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:136:13:  %div = sdiv i32 %1, 10
     [no debug info]:137:13:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:13:  %sub = sub nsw i32 %2, 1
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:139:13:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:13:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:13:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:13:  %div = sdiv i32 %1, 10
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:137:13:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:13:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:13:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:140:13:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:13:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:13:  %div = sdiv i32 %1, 10
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:137:13:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:13:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:13:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:13:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:69:4:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:13:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:13:  %div = sdiv i32 %1, 10
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:137:13:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:13:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:13:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:70:4:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:140:13:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:13:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:13:  %div = sdiv i32 %1, 10
     [no debug info]:71:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:137:13:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:13:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:13:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:72:4:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:140:13:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:13:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:136:13:  %div = sdiv i32 %1, 10
     [no debug info]:137:13:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:13:  %sub = sub nsw i32 %2, 1
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:139:13:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:13:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:13:  %n.addr = alloca i32, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:124:13:  %c.addr = alloca i32, align 4
     [no debug info]:125:13:  %r.addr = alloca i8*, align 8
     [no debug info]:126:13:  %d = alloca i32, align 4
     [no debug info]:73:4:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:127:13:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:13:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:13:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:74:4:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:130:13:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:13:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:13:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:162:13:  ret void
     [no debug info]:141:13:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:13:  %rem = srem i32 %4, 10
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:143:13:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:13:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:13:  %tobool = icmp ne i32 %5, 0
     [no debug info]:75:4:  %conv = zext i32 %14 to i64
     [no debug info]:146:13:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:13:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:13:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:149:13:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:13:  ret void
     [no debug info]:141:13:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:142:13:  %rem = srem i32 %4, 10
     [no debug info]:143:13:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:13:  %5 = load i32, i32* @h, align 4
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:145:13:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:13:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:13:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:148:13:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:13:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:13:  ret void
     [no debug info]:76:4:  %mul = mul i64 %11, %conv
     [no debug info]:141:13:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:13:  %rem = srem i32 %4, 10
     [no debug info]:143:13:  store i32 %rem, i32* %d, align 4
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:144:13:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:13:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:13:  %6 = load i32, i32* %d, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:147:13:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:13:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:13:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:152:13:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:13:  %add = add nsw i32 48, %7
     [no debug info]:154:13:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:155:13:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:13:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:13:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:77:4:  %15 = load i64, i64* %c, align 8
     [no debug info]:158:13:  store i32 1, i32* @h, align 4
     [no debug info]:159:13:  br label %if.end3
     [no debug info]:162:13:  ret void
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:141:13:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:13:  %rem = srem i32 %4, 10
     [no debug info]:143:13:  store i32 %rem, i32* %d, align 4
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:144:13:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:13:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:13:  %6 = load i32, i32* %d, align 4
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:147:13:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:13:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:13:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:152:13:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:13:  %add = add nsw i32 48, %7
     [no debug info]:154:13:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:155:13:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:13:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:13:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:158:13:  store i32 1, i32* @h, align 4
     [no debug info]:159:13:  br label %if.end3
     [no debug info]:162:13:  ret void
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:141:13:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:13:  %rem = srem i32 %4, 10
     [no debug info]:143:13:  store i32 %rem, i32* %d, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:144:13:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:13:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:13:  %6 = load i32, i32* %d, align 4
     [no debug info]:78:4:  %add = add i64 %mul, %15
     [no debug info]:147:13:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:13:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:13:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:152:13:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:13:  %add = add nsw i32 48, %7
     [no debug info]:154:13:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:13:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:13:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:13:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:13:  store i32 1, i32* @h, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:159:13:  br label %if.end3
     [no debug info]:162:13:  ret void
     [no debug info]:141:13:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:79:4:  store i64 %add, i64* %b, align 8
     [no debug info]:142:13:  %rem = srem i32 %4, 10
     [no debug info]:143:13:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:13:  %5 = load i32, i32* @h, align 4
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:145:13:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:13:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:13:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:80:4:  %16 = load i64, i64* %b, align 8
     [no debug info]:148:13:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:13:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:13:  %7 = load i32, i32* %d, align 4
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:153:13:  %add = add nsw i32 48, %7
     [no debug info]:154:13:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:13:  %idx.ext = sext i32 %add to i64
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:156:13:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:13:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:13:  store i32 1, i32* @h, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:159:13:  br label %if.end3
     [no debug info]:162:13:  ret void
     [no debug info]:240:13:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:13:  %dec = add nsw i32 %18, -1
     [no debug info]:242:13:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:13:  br label %for.cond8
     [no debug info]:228:13:  %13 = load i32, i32* %i, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:229:13:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:13:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:13:  ret void
     [no debug info]:268:13:  ret i32 0
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:81:4:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:82:4:  store i64 %div, i64* %c, align 8
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:55:6:  store i64 0, i64* %c, align 8
     [no debug info]:56:6:  store i32 0, i32* %i, align 4
     [no debug info]:57:6:  br label %for.cond2
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:83:4:  %17 = load i64, i64* %b, align 8
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:84:4:  %18 = load i64, i64* %c, align 8
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:85:4:  %mul8 = mul i64 %18, 100000000
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:86:4:  %sub = sub i64 %17, %mul8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:6:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:6:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:6:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:6:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:6:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:87:4:  %conv9 = trunc i64 %sub to i32
     [no debug info]:75:6:  %conv = zext i32 %14 to i64
     [no debug info]:76:6:  %mul = mul i64 %11, %conv
     [no debug info]:77:6:  %15 = load i64, i64* %c, align 8
     [no debug info]:88:4:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:78:6:  %add = add i64 %mul, %15
     [no debug info]:79:6:  store i64 %add, i64* %b, align 8
     [no debug info]:80:6:  %16 = load i64, i64* %b, align 8
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:81:6:  %div = udiv i64 %16, 100000000
     [no debug info]:82:6:  store i64 %div, i64* %c, align 8
     [no debug info]:83:6:  %17 = load i64, i64* %b, align 8
     [no debug info]:89:4:  %20 = load i32, i32* %i, align 4
     [no debug info]:84:6:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:6:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:6:  %sub = sub i64 %17, %mul8
     [no debug info]:90:4:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:87:6:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:6:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:6:  %20 = load i32, i32* %i, align 4
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:90:6:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:6:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:6:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:91:4:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:93:6:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:6:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:6:  store i32 %inc13, i32* %i, align 4
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:96:6:  br label %for.cond2
     [no debug info]:60:6:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:6:  %8 = load i32, i32* %l, align 4
     [no debug info]:92:4:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:62:6:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:6:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:6:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:65:6:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:6:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:6:  %22 = load i32, i32* %i, align 4
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:100:6:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:6:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:6:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:6:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:6:  %dec = add i64 %25, -1
     [no debug info]:112:6:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:6:  br label %while.cond
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:50:6:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:6:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:6:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:116:6:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:6:  ret i32 %26
     [no debug info]:221:6:  store i32 %call7, i32* %L, align 4
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:222:6:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:6:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:6:  store i32 %sub, i32* %i, align 4
     [no debug info]:93:4:  %21 = load i32, i32* %i, align 4
     [no debug info]:225:6:  br label %for.cond8
     [no debug info]:228:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:6:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:94:4:  %inc13 = add nsw i32 %21, 1
     [no debug info]:230:6:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:6:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:6:  %15 = load i32, i32* %i, align 4
     [no debug info]:95:4:  store i32 %inc13, i32* %i, align 4
     [no debug info]:235:6:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:6:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:6:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:238:6:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:6:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:96:4:  br label %for.cond2
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:6:  ret void
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:99:4:  %22 = load i32, i32* %i, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:162:6:  ret void
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:100:4:  %23 = load i32, i32* %l, align 4
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:101:4:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:102:4:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:110:4:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:111:4:  %dec = add i64 %25, -1
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:112:4:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:113:4:  br label %while.cond
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:162:6:  ret void
     [no debug info]:240:6:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:6:  %dec = add nsw i32 %18, -1
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:242:6:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:6:  br label %for.cond8
     [no debug info]:228:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:6:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:6:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:6:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:6:  %15 = load i32, i32* %i, align 4
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:235:6:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:6:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:6:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:238:6:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:6:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:50:4:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:51:4:  %tobool = icmp ne i64 %6, 0
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:52:4:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:14:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:14:  ret i32 %26
     [no debug info]:221:14:  store i32 %call7, i32* %L, align 4
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:222:14:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:14:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:14:  store i32 %sub, i32* %i, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:225:14:  br label %for.cond8
     [no debug info]:228:14:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:14:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:230:14:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:14:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:14:  %15 = load i32, i32* %i, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:235:14:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:14:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:14:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:238:14:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:14:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:14:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:136:14:  %div = sdiv i32 %1, 10
     [no debug info]:137:14:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:14:  %sub = sub nsw i32 %2, 1
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:139:14:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:14:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:55:4:  store i64 0, i64* %c, align 8
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:56:4:  store i32 0, i32* %i, align 4
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:135:14:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:14:  %div = sdiv i32 %1, 10
     [no debug info]:137:14:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:138:14:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:14:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:14:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:14:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:14:  %div = sdiv i32 %1, 10
     [no debug info]:137:14:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:138:14:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:14:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:14:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:135:14:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:14:  %div = sdiv i32 %1, 10
     [no debug info]:137:14:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:138:14:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:14:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:14:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:14:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:14:  %div = sdiv i32 %1, 10
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:137:14:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:14:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:14:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:140:14:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:14:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:14:  %div = sdiv i32 %1, 10
     [no debug info]:57:4:  br label %for.cond2
     [no debug info]:137:14:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:14:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:14:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:14:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:14:  %n.addr = alloca i32, align 4
     [no debug info]:124:14:  %c.addr = alloca i32, align 4
     [no debug info]:125:14:  %r.addr = alloca i8*, align 8
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:126:14:  %d = alloca i32, align 4
     [no debug info]:127:14:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:14:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:14:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:14:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:14:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:14:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:162:14:  ret void
     [no debug info]:141:14:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:14:  %rem = srem i32 %4, 10
     [no debug info]:143:14:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:14:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:14:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:14:  %6 = load i32, i32* %d, align 4
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:147:14:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:14:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:14:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:162:14:  ret void
     [no debug info]:141:14:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:14:  %rem = srem i32 %4, 10
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:143:14:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:14:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:14:  %tobool = icmp ne i32 %5, 0
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:146:14:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:14:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:14:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:149:14:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:14:  ret void
     [no debug info]:141:14:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:142:14:  %rem = srem i32 %4, 10
     [no debug info]:143:14:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:14:  %5 = load i32, i32* @h, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:145:14:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:14:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:14:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:148:14:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:14:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:14:  ret void
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:141:14:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:14:  %rem = srem i32 %4, 10
     [no debug info]:143:14:  store i32 %rem, i32* %d, align 4
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:144:14:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:14:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:14:  %6 = load i32, i32* %d, align 4
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:147:14:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:14:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:14:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:162:14:  ret void
     [no debug info]:141:14:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:14:  %rem = srem i32 %4, 10
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:143:14:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:14:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:14:  %tobool = icmp ne i32 %5, 0
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:146:14:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:14:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:14:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:14:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:14:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:14:  %add = add nsw i32 48, %7
     [no debug info]:154:14:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:155:14:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:14:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:14:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:158:14:  store i32 1, i32* @h, align 4
     [no debug info]:159:14:  br label %if.end3
     [no debug info]:162:14:  ret void
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:141:14:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:14:  %rem = srem i32 %4, 10
     [no debug info]:143:14:  store i32 %rem, i32* %d, align 4
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:144:14:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:14:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:14:  %6 = load i32, i32* %d, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:147:14:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:14:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:14:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:152:14:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:14:  %add = add nsw i32 48, %7
     [no debug info]:154:14:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:155:14:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:14:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:14:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:158:14:  store i32 1, i32* @h, align 4
     [no debug info]:159:14:  br label %if.end3
     [no debug info]:162:14:  ret void
     [no debug info]:240:14:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:14:  %dec = add nsw i32 %18, -1
     [no debug info]:242:14:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:14:  br label %for.cond8
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:228:14:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:14:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:14:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:246:14:  ret void
     [no debug info]:268:14:  ret i32 0
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:6:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:136:6:  %div = sdiv i32 %1, 10
     [no debug info]:137:6:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:6:  %sub = sub nsw i32 %2, 1
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:139:6:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:6:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:6:  %n.addr = alloca i32, align 4
     [no debug info]:124:6:  %c.addr = alloca i32, align 4
     [no debug info]:125:6:  %r.addr = alloca i8*, align 8
     [no debug info]:126:6:  %d = alloca i32, align 4
     [no debug info]:127:6:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:15:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:15:  ret i32 %26
     [no debug info]:221:15:  store i32 %call7, i32* %L, align 4
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:222:15:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:15:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:15:  store i32 %sub, i32* %i, align 4
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:225:15:  br label %for.cond8
     [no debug info]:228:15:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:15:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:128:6:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:230:15:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:15:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:15:  %15 = load i32, i32* %i, align 4
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:235:15:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:15:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:15:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:15:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:15:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:6:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:130:6:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:15:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:15:  %div = sdiv i32 %1, 10
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:137:15:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:15:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:15:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:131:6:  %cmp = icmp sle i32 %0, 0
     [no debug info]:140:15:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:132:6:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:162:6:  ret void
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:55:5:  store i64 0, i64* %c, align 8
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:15:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:56:5:  store i32 0, i32* %i, align 4
     [no debug info]:136:15:  %div = sdiv i32 %1, 10
     [no debug info]:137:15:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:15:  %sub = sub nsw i32 %2, 1
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:139:15:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:15:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:57:5:  br label %for.cond2
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:135:15:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:15:  %div = sdiv i32 %1, 10
     [no debug info]:137:15:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:138:15:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:15:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:15:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:135:15:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:15:  %div = sdiv i32 %1, 10
     [no debug info]:137:15:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:138:15:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:15:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:15:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:15:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:15:  %div = sdiv i32 %1, 10
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:137:15:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:15:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:15:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:140:15:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:15:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:15:  %div = sdiv i32 %1, 10
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:137:15:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:15:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:15:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:69:4:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:140:15:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:15:  %n.addr = alloca i32, align 4
     [no debug info]:124:15:  %c.addr = alloca i32, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:125:15:  %r.addr = alloca i8*, align 8
     [no debug info]:126:15:  %d = alloca i32, align 4
     [no debug info]:127:15:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:128:15:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:15:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:15:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:131:15:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:15:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:15:  ret void
     [no debug info]:141:15:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:15:  %rem = srem i32 %4, 10
     [no debug info]:143:15:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:15:  %5 = load i32, i32* @h, align 4
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:145:15:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:15:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:15:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:148:15:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:15:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:15:  ret void
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:141:15:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:15:  %rem = srem i32 %4, 10
     [no debug info]:143:15:  store i32 %rem, i32* %d, align 4
     [no debug info]:70:4:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:144:15:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:15:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:15:  %6 = load i32, i32* %d, align 4
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:147:15:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:15:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:15:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:71:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:152:15:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:15:  %add = add nsw i32 48, %7
     [no debug info]:154:15:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:155:15:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:15:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:15:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:72:4:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:158:15:  store i32 1, i32* @h, align 4
     [no debug info]:159:15:  br label %if.end3
     [no debug info]:162:15:  ret void
     [no debug info]:141:15:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:15:  %rem = srem i32 %4, 10
     [no debug info]:143:15:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:15:  %5 = load i32, i32* @h, align 4
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:145:15:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:15:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:15:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:148:15:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:15:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:15:  %7 = load i32, i32* %d, align 4
     [no debug info]:73:4:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:153:15:  %add = add nsw i32 48, %7
     [no debug info]:154:15:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:15:  %idx.ext = sext i32 %add to i64
     [no debug info]:74:4:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:156:15:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:15:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:15:  store i32 1, i32* @h, align 4
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:159:15:  br label %if.end3
     [no debug info]:162:15:  ret void
     [no debug info]:141:15:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:142:15:  %rem = srem i32 %4, 10
     [no debug info]:143:15:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:15:  %5 = load i32, i32* @h, align 4
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:145:15:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:15:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:15:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:148:15:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:15:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:15:  %7 = load i32, i32* %d, align 4
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:153:15:  %add = add nsw i32 48, %7
     [no debug info]:154:15:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:15:  %idx.ext = sext i32 %add to i64
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:156:15:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:15:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:15:  store i32 1, i32* @h, align 4
     [no debug info]:159:15:  br label %if.end3
     [no debug info]:162:15:  ret void
     [no debug info]:141:15:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:15:  %rem = srem i32 %4, 10
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:143:15:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:15:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:15:  %tobool = icmp ne i32 %5, 0
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:146:15:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:15:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:15:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:149:15:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:15:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:15:  %add = add nsw i32 48, %7
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:154:15:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:15:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:15:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:157:15:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:15:  store i32 1, i32* @h, align 4
     [no debug info]:159:15:  br label %if.end3
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:162:15:  ret void
     [no debug info]:141:15:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:15:  %rem = srem i32 %4, 10
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:143:15:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:15:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:15:  %tobool = icmp ne i32 %5, 0
     [no debug info]:162:6:  ret void
     [no debug info]:146:15:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:15:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:15:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:15:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:15:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:15:  %add = add nsw i32 48, %7
     [no debug info]:154:15:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:155:15:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:15:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:15:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:15:  store i32 1, i32* @h, align 4
     [no debug info]:159:15:  br label %if.end3
     [no debug info]:162:15:  ret void
     [no debug info]:240:15:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:15:  %dec = add nsw i32 %18, -1
     [no debug info]:242:15:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:15:  br label %for.cond8
     [no debug info]:228:15:  %13 = load i32, i32* %i, align 4
     [no debug info]:75:4:  %conv = zext i32 %14 to i64
     [no debug info]:229:15:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:15:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:15:  ret void
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:268:15:  ret i32 0
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:76:4:  %mul = mul i64 %11, %conv
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:77:4:  %15 = load i64, i64* %c, align 8
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:78:4:  %add = add i64 %mul, %15
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:79:4:  store i64 %add, i64* %b, align 8
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:80:4:  %16 = load i64, i64* %b, align 8
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:81:4:  %div = udiv i64 %16, 100000000
     [no debug info]:141:6:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:6:  %rem = srem i32 %4, 10
     [no debug info]:143:6:  store i32 %rem, i32* %d, align 4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:144:6:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:6:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:6:  %6 = load i32, i32* %d, align 4
     [no debug info]:69:5:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:147:6:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:6:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:6:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:82:4:  store i64 %div, i64* %c, align 8
     [no debug info]:152:6:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:6:  %add = add nsw i32 48, %7
     [no debug info]:154:6:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:83:4:  %17 = load i64, i64* %b, align 8
     [no debug info]:155:6:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:6:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:6:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:84:4:  %18 = load i64, i64* %c, align 8
     [no debug info]:158:6:  store i32 1, i32* @h, align 4
     [no debug info]:159:6:  br label %if.end3
     [no debug info]:162:6:  ret void
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:240:6:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:6:  %dec = add nsw i32 %18, -1
     [no debug info]:242:6:  store i32 %dec, i32* %i, align 4
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:243:6:  br label %for.cond8
     [no debug info]:228:6:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:6:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:230:6:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:6:  ret void
     [no debug info]:268:6:  ret i32 0
     [no debug info]:85:4:  %mul8 = mul i64 %18, 100000000
     [no debug info]:70:5:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:5:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:5:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:5:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:5:  %conv = zext i32 %14 to i64
     [no debug info]:76:5:  %mul = mul i64 %11, %conv
     [no debug info]:77:5:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:5:  %add = add i64 %mul, %15
     [no debug info]:79:5:  store i64 %add, i64* %b, align 8
     [no debug info]:80:5:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:5:  %div = udiv i64 %16, 100000000
     [no debug info]:82:5:  store i64 %div, i64* %c, align 8
     [no debug info]:83:5:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:5:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:5:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:5:  %sub = sub i64 %17, %mul8
     [no debug info]:87:5:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:5:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:86:4:  %sub = sub i64 %17, %mul8
     [no debug info]:89:5:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:5:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:5:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:87:4:  %conv9 = trunc i64 %sub to i32
     [no debug info]:92:5:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:5:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:5:  %inc13 = add nsw i32 %21, 1
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:95:5:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:5:  br label %for.cond2
     [no debug info]:60:5:  %7 = load i32, i32* %i, align 4
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:61:5:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:5:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:5:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:5:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:5:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:5:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:5:  %22 = load i32, i32* %i, align 4
     [no debug info]:88:4:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:100:5:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:5:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:5:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:110:5:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:5:  %dec = add i64 %25, -1
     [no debug info]:112:5:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:89:4:  %20 = load i32, i32* %i, align 4
     [no debug info]:113:5:  br label %while.cond
     [no debug info]:50:5:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:5:  %tobool = icmp ne i64 %6, 0
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:52:5:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:5:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:5:  ret i32 %26
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:221:5:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:5:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:5:  %sub = sub nsw i32 %12, 1
     [no debug info]:90:4:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:224:5:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:5:  br label %for.cond8
     [no debug info]:228:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:91:4:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:229:5:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:5:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:5:  %14 = load i32*, i32** %a, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:234:5:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:5:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:5:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:237:5:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:5:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:5:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:92:4:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:135:5:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:5:  %div = sdiv i32 %1, 10
     [no debug info]:137:5:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:93:4:  %21 = load i32, i32* %i, align 4
     [no debug info]:138:5:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:5:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:5:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:94:4:  %inc13 = add nsw i32 %21, 1
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:95:4:  store i32 %inc13, i32* %i, align 4
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:96:4:  br label %for.cond2
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:60:4:  %7 = load i32, i32* %i, align 4
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:5:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:5:  %div = sdiv i32 %1, 10
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:137:5:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:5:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:5:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:61:4:  %8 = load i32, i32* %l, align 4
     [no debug info]:140:5:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:62:4:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:135:5:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:5:  %div = sdiv i32 %1, 10
     [no debug info]:137:5:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:138:5:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:5:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:5:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:63:4:  %9 = load i64, i64* %c, align 8
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:64:4:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:135:5:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:5:  %div = sdiv i32 %1, 10
     [no debug info]:137:5:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:138:5:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:5:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:5:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:135:5:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:5:  %div = sdiv i32 %1, 10
     [no debug info]:137:5:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:5:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:5:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:5:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:65:4:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:135:5:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:5:  %div = sdiv i32 %1, 10
     [no debug info]:137:5:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:138:5:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:5:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:5:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:66:4:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:123:5:  %n.addr = alloca i32, align 4
     [no debug info]:124:5:  %c.addr = alloca i32, align 4
     [no debug info]:125:5:  %r.addr = alloca i8*, align 8
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:126:5:  %d = alloca i32, align 4
     [no debug info]:127:5:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:5:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:129:5:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:5:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:5:  %cmp = icmp sle i32 %0, 0
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:132:5:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:5:  ret void
     [no debug info]:141:5:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:142:5:  %rem = srem i32 %4, 10
     [no debug info]:143:5:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:5:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:5:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:5:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:5:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:5:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:99:4:  %22 = load i32, i32* %i, align 4
     [no debug info]:149:5:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:5:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:5:  %add = add nsw i32 48, %7
     [no debug info]:100:4:  %23 = load i32, i32* %l, align 4
     [no debug info]:154:5:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:5:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:5:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:157:5:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:5:  store i32 1, i32* @h, align 4
     [no debug info]:159:5:  br label %if.end3
     [no debug info]:162:5:  ret void
     [no debug info]:141:5:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:5:  %rem = srem i32 %4, 10
     [no debug info]:143:5:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:5:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:5:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:5:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:5:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:148:5:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:5:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:5:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:5:  %add = add nsw i32 48, %7
     [no debug info]:154:5:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:5:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:5:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:157:5:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:5:  store i32 1, i32* @h, align 4
     [no debug info]:159:5:  br label %if.end3
     [no debug info]:101:4:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:162:5:  ret void
     [no debug info]:141:5:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:5:  %rem = srem i32 %4, 10
     [no debug info]:143:5:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:5:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:5:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:5:  %6 = load i32, i32* %d, align 4
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:147:5:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:5:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:5:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:152:5:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:5:  %add = add nsw i32 48, %7
     [no debug info]:154:5:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:155:5:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:5:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:5:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:158:5:  store i32 1, i32* @h, align 4
     [no debug info]:159:5:  br label %if.end3
     [no debug info]:162:5:  ret void
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:141:5:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:5:  %rem = srem i32 %4, 10
     [no debug info]:143:5:  store i32 %rem, i32* %d, align 4
     [no debug info]:102:4:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:144:5:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:5:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:5:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:5:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:5:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:5:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:5:  %7 = load i32, i32* %d, align 4
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:153:5:  %add = add nsw i32 48, %7
     [no debug info]:154:5:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:5:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:5:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:5:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:5:  store i32 1, i32* @h, align 4
     [no debug info]:159:5:  br label %if.end3
     [no debug info]:162:5:  ret void
     [no debug info]:141:5:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:5:  %rem = srem i32 %4, 10
     [no debug info]:143:5:  store i32 %rem, i32* %d, align 4
     [no debug info]:110:4:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:144:5:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:5:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:5:  %6 = load i32, i32* %d, align 4
     [no debug info]:111:4:  %dec = add i64 %25, -1
     [no debug info]:147:5:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:5:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:5:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:152:5:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:5:  %add = add nsw i32 48, %7
     [no debug info]:154:5:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:155:5:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:5:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:5:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:112:4:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:158:5:  store i32 1, i32* @h, align 4
     [no debug info]:159:5:  br label %if.end3
     [no debug info]:162:5:  ret void
     [no debug info]:113:4:  br label %while.cond
     [no debug info]:141:5:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:5:  %rem = srem i32 %4, 10
     [no debug info]:143:5:  store i32 %rem, i32* %d, align 4
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:144:5:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:5:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:5:  %6 = load i32, i32* %d, align 4
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:147:5:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:5:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:5:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:152:5:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:5:  %add = add nsw i32 48, %7
     [no debug info]:154:5:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:50:4:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:155:5:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:5:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:5:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:51:4:  %tobool = icmp ne i64 %6, 0
     [no debug info]:158:5:  store i32 1, i32* @h, align 4
     [no debug info]:159:5:  br label %if.end3
     [no debug info]:162:5:  ret void
     [no debug info]:240:5:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:5:  %dec = add nsw i32 %18, -1
     [no debug info]:242:5:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:5:  br label %for.cond8
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:228:5:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:5:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:5:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:5:  ret void
     [no debug info]:268:5:  ret i32 0
     [no debug info]:52:4:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:4:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:4:  ret i32 %26
     [no debug info]:221:4:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:4:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:4:  %sub = sub nsw i32 %12, 1
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:224:4:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:4:  br label %for.cond8
     [no debug info]:228:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:4:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:4:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:4:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:4:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:4:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:4:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:4:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:4:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:4:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:4:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:4:  %div = sdiv i32 %1, 10
     [no debug info]:137:4:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:4:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:4:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:140:4:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:135:4:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:4:  %div = sdiv i32 %1, 10
     [no debug info]:137:4:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:4:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:4:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:4:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:4:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:4:  %div = sdiv i32 %1, 10
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:137:4:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:4:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:4:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:4:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:4:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:4:  %div = sdiv i32 %1, 10
     [no debug info]:137:4:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:4:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:4:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:4:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:4:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:4:  %div = sdiv i32 %1, 10
     [no debug info]:137:4:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:4:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:4:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:4:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:4:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:4:  %div = sdiv i32 %1, 10
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:137:4:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:4:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:4:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:140:4:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:4:  %n.addr = alloca i32, align 4
     [no debug info]:124:4:  %c.addr = alloca i32, align 4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:125:4:  %r.addr = alloca i8*, align 8
     [no debug info]:126:4:  %d = alloca i32, align 4
     [no debug info]:127:4:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:128:4:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:4:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:4:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:4:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:4:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:4:  ret void
     [no debug info]:141:4:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:4:  %rem = srem i32 %4, 10
     [no debug info]:143:4:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:4:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:4:  %tobool = icmp ne i32 %5, 0
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:146:4:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:4:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:4:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:4:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:4:  ret void
     [no debug info]:141:4:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:4:  %rem = srem i32 %4, 10
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:143:4:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:4:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:4:  %tobool = icmp ne i32 %5, 0
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:146:4:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:4:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:4:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:4:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:162:4:  ret void
     [no debug info]:141:4:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:4:  %rem = srem i32 %4, 10
     [no debug info]:143:4:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:4:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:4:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:4:  %6 = load i32, i32* %d, align 4
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:147:4:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:4:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:4:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:162:4:  ret void
     [no debug info]:141:4:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:4:  %rem = srem i32 %4, 10
     [no debug info]:143:4:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:4:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:4:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:4:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:4:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:4:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:4:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:4:  %7 = load i32, i32* %d, align 4
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:153:4:  %add = add nsw i32 48, %7
     [no debug info]:154:4:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:4:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:4:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:4:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:4:  store i32 1, i32* @h, align 4
     [no debug info]:159:4:  br label %if.end3
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:162:4:  ret void
     [no debug info]:141:4:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:4:  %rem = srem i32 %4, 10
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:143:4:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:4:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:4:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:4:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:4:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:4:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:4:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:152:4:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:4:  %add = add nsw i32 48, %7
     [no debug info]:154:4:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:155:4:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:4:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:4:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:158:4:  store i32 1, i32* @h, align 4
     [no debug info]:159:4:  br label %if.end3
     [no debug info]:162:4:  ret void
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:141:4:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:4:  %rem = srem i32 %4, 10
     [no debug info]:143:4:  store i32 %rem, i32* %d, align 4
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:144:4:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:4:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:4:  %6 = load i32, i32* %d, align 4
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:147:4:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:4:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:4:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:152:4:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:4:  %add = add nsw i32 48, %7
     [no debug info]:154:4:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:4:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:4:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:4:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:4:  store i32 1, i32* @h, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:159:4:  br label %if.end3
     [no debug info]:162:4:  ret void
     [no debug info]:240:4:  %18 = load i32, i32* %i, align 4
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:241:4:  %dec = add nsw i32 %18, -1
     [no debug info]:242:4:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:4:  br label %for.cond8
     [no debug info]:228:4:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:4:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:4:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:4:  ret void
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:268:4:  ret i32 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:16:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:16:  ret i32 %26
     [no debug info]:221:16:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:16:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:16:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:16:  store i32 %sub, i32* %i, align 4
     [no debug info]:55:2:  store i64 0, i64* %c, align 8
     [no debug info]:225:16:  br label %for.cond8
     [no debug info]:228:16:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:16:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:56:2:  store i32 0, i32* %i, align 4
     [no debug info]:230:16:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:16:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:16:  %15 = load i32, i32* %i, align 4
     [no debug info]:57:2:  br label %for.cond2
     [no debug info]:235:16:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:16:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:16:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:238:16:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:16:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:16:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:16:  %div = sdiv i32 %1, 10
     [no debug info]:137:16:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:16:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:16:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:16:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:16:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:136:16:  %div = sdiv i32 %1, 10
     [no debug info]:137:16:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:16:  %sub = sub nsw i32 %2, 1
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:139:16:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:16:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:16:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:16:  %div = sdiv i32 %1, 10
     [no debug info]:137:16:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:16:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:16:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:69:2:  %11 = load i64, i64* %n.addr, align 8
     [no debug info]:140:16:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:70:2:  %12 = load i32*, i32** %a.addr, align 8
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:71:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:16:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:16:  %div = sdiv i32 %1, 10
     [no debug info]:137:16:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:16:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:16:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:16:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:72:2:  %idxprom6 = sext i32 %13 to i64
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:16:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:73:2:  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom6
     [no debug info]:136:16:  %div = sdiv i32 %1, 10
     [no debug info]:137:16:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:16:  %sub = sub nsw i32 %2, 1
     [no debug info]:74:2:  %14 = load i32, i32* %arrayidx7, align 4
     [no debug info]:139:16:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:16:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:75:2:  %conv = zext i32 %14 to i64
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:16:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:16:  %div = sdiv i32 %1, 10
     [no debug info]:137:16:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:16:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:16:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:16:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:16:  %n.addr = alloca i32, align 4
     [no debug info]:124:16:  %c.addr = alloca i32, align 4
     [no debug info]:125:16:  %r.addr = alloca i8*, align 8
     [no debug info]:126:16:  %d = alloca i32, align 4
     [no debug info]:76:2:  %mul = mul i64 %11, %conv
     [no debug info]:127:16:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:16:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:16:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:16:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:16:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:16:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:16:  ret void
     [no debug info]:141:16:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:16:  %rem = srem i32 %4, 10
     [no debug info]:143:16:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:16:  %5 = load i32, i32* @h, align 4
     [no debug info]:77:2:  %15 = load i64, i64* %c, align 8
     [no debug info]:145:16:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:16:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:16:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:78:2:  %add = add i64 %mul, %15
     [no debug info]:148:16:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:16:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:16:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:16:  %add = add nsw i32 48, %7
     [no debug info]:154:16:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:16:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:16:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:79:2:  store i64 %add, i64* %b, align 8
     [no debug info]:157:16:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:16:  store i32 1, i32* @h, align 4
     [no debug info]:159:16:  br label %if.end3
     [no debug info]:162:16:  ret void
     [no debug info]:141:16:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:16:  %rem = srem i32 %4, 10
     [no debug info]:143:16:  store i32 %rem, i32* %d, align 4
     [no debug info]:80:2:  %16 = load i64, i64* %b, align 8
     [no debug info]:144:16:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:16:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:16:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:16:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:16:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:16:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:16:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:16:  %add = add nsw i32 48, %7
     [no debug info]:154:16:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:16:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:16:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:16:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:16:  store i32 1, i32* @h, align 4
     [no debug info]:159:16:  br label %if.end3
     [no debug info]:162:16:  ret void
     [no debug info]:81:2:  %div = udiv i64 %16, 100000000
     [no debug info]:141:16:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:16:  %rem = srem i32 %4, 10
     [no debug info]:143:16:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:16:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:16:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:16:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:16:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:82:2:  store i64 %div, i64* %c, align 8
     [no debug info]:148:16:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:16:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:16:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:16:  %add = add nsw i32 48, %7
     [no debug info]:154:16:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:16:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:16:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:16:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:16:  store i32 1, i32* @h, align 4
     [no debug info]:159:16:  br label %if.end3
     [no debug info]:162:16:  ret void
     [no debug info]:141:16:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:16:  %rem = srem i32 %4, 10
     [no debug info]:143:16:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:16:  %5 = load i32, i32* @h, align 4
     [no debug info]:83:2:  %17 = load i64, i64* %b, align 8
     [no debug info]:145:16:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:16:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:16:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:16:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:16:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:16:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:16:  %add = add nsw i32 48, %7
     [no debug info]:84:2:  %18 = load i64, i64* %c, align 8
     [no debug info]:154:16:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:16:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:16:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:16:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:16:  store i32 1, i32* @h, align 4
     [no debug info]:159:16:  br label %if.end3
     [no debug info]:162:16:  ret void
     [no debug info]:141:16:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:16:  %rem = srem i32 %4, 10
     [no debug info]:143:16:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:16:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:16:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:16:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:16:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:16:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:16:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:16:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:16:  %add = add nsw i32 48, %7
     [no debug info]:154:16:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:85:2:  %mul8 = mul i64 %18, 100000000
     [no debug info]:155:16:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:16:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:16:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:86:2:  %sub = sub i64 %17, %mul8
     [no debug info]:158:16:  store i32 1, i32* @h, align 4
     [no debug info]:159:16:  br label %if.end3
     [no debug info]:162:16:  ret void
     [no debug info]:141:16:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:16:  %rem = srem i32 %4, 10
     [no debug info]:143:16:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:16:  %5 = load i32, i32* @h, align 4
     [no debug info]:87:2:  %conv9 = trunc i64 %sub to i32
     [no debug info]:145:16:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:16:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:16:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:16:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:16:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:16:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:16:  %add = add nsw i32 48, %7
     [no debug info]:88:2:  %19 = load i32*, i32** %a.addr, align 8
     [no debug info]:154:16:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:16:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:16:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:89:2:  %20 = load i32, i32* %i, align 4
     [no debug info]:157:16:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:16:  store i32 1, i32* @h, align 4
     [no debug info]:159:16:  br label %if.end3
     [no debug info]:90:2:  %idxprom10 = sext i32 %20 to i64
     [no debug info]:162:16:  ret void
     [no debug info]:240:16:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:16:  %dec = add nsw i32 %18, -1
     [no debug info]:91:2:  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10
     [no debug info]:242:16:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:16:  br label %for.cond8
     [no debug info]:228:16:  %13 = load i32, i32* %i, align 4
     [no debug info]:92:2:  store i32 %conv9, i32* %arrayidx11, align 4
     [no debug info]:229:16:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:16:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:16:  ret void
     [no debug info]:93:2:  %21 = load i32, i32* %i, align 4
     [no debug info]:268:16:  ret i32 0
     [no debug info]:94:2:  %inc13 = add nsw i32 %21, 1
     [no debug info]:95:2:  store i32 %inc13, i32* %i, align 4
     [no debug info]:96:2:  br label %for.cond2
     [no debug info]:60:2:  %7 = load i32, i32* %i, align 4
     [no debug info]:61:2:  %8 = load i32, i32* %l, align 4
     [no debug info]:62:2:  %cmp3 = icmp slt i32 %7, %8
     [no debug info]:63:2:  %9 = load i64, i64* %c, align 8
     [no debug info]:64:2:  %tobool4 = icmp ne i64 %9, 0
     [no debug info]:65:2:  %10 = select i1 %cmp3, i1 true, i1 %tobool4
     [no debug info]:66:2:  br i1 %10, label %for.body5, label %for.end14
     [no debug info]:99:2:  %22 = load i32, i32* %i, align 4
     [no debug info]:100:2:  %23 = load i32, i32* %l, align 4
     [no debug info]:101:2:  %cmp15 = icmp sgt i32 %22, %23
     [no debug info]:102:2:  br i1 %cmp15, label %if.then, label %if.end
     [no debug info]:110:2:  %25 = load i64, i64* %n.addr, align 8
     [no debug info]:111:2:  %dec = add i64 %25, -1
     [no debug info]:112:2:  store i64 %dec, i64* %n.addr, align 8
     [no debug info]:113:2:  br label %while.cond
     [no debug info]:50:2:  %6 = load i64, i64* %n.addr, align 8
     [no debug info]:51:2:  %tobool = icmp ne i64 %6, 0
     [no debug info]:52:2:  br i1 %tobool, label %while.body, label %while.end
     [no debug info]:116:2:  %26 = load i32, i32* %l, align 4
     [no debug info]:117:2:  ret i32 %26
     [no debug info]:221:2:  store i32 %call7, i32* %L, align 4
     [no debug info]:222:2:  %12 = load i32, i32* %L, align 4
     [no debug info]:223:2:  %sub = sub nsw i32 %12, 1
     [no debug info]:224:2:  store i32 %sub, i32* %i, align 4
     [no debug info]:225:2:  br label %for.cond8
     [no debug info]:228:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:2:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:2:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:233:2:  %14 = load i32*, i32** %a, align 8
     [no debug info]:234:2:  %15 = load i32, i32* %i, align 4
     [no debug info]:235:2:  %idxprom = sext i32 %15 to i64
     [no debug info]:236:2:  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom
     [no debug info]:237:2:  %16 = load i32, i32* %arrayidx, align 4
     [no debug info]:238:2:  %17 = load i8*, i8** %s, align 8
     [no debug info]:239:2:  call void @print_digits(i32 %16, i32 6, i8* %17)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:2:  %div = sdiv i32 %1, 10
     [no debug info]:137:2:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:2:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:2:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:2:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:2:  %div = sdiv i32 %1, 10
     [no debug info]:137:2:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:2:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:2:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:2:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:2:  %div = sdiv i32 %1, 10
     [no debug info]:137:2:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:2:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:2:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:2:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:2:  %div = sdiv i32 %1, 10
     [no debug info]:137:2:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:2:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:2:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:2:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:2:  %div = sdiv i32 %1, 10
     [no debug info]:137:2:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:2:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:2:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:2:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:135:2:  %1 = load i32, i32* %n.addr, align 4
     [no debug info]:136:2:  %div = sdiv i32 %1, 10
     [no debug info]:137:2:  %2 = load i32, i32* %c.addr, align 4
     [no debug info]:138:2:  %sub = sub nsw i32 %2, 1
     [no debug info]:139:2:  %3 = load i8*, i8** %r.addr, align 8
     [no debug info]:140:2:  call void @print_digits(i32 %div, i32 %sub, i8* %3)
     [no debug info]:123:2:  %n.addr = alloca i32, align 4
     [no debug info]:124:2:  %c.addr = alloca i32, align 4
     [no debug info]:125:2:  %r.addr = alloca i8*, align 8
     [no debug info]:126:2:  %d = alloca i32, align 4
     [no debug info]:127:2:  store i32 %n, i32* %n.addr, align 4
     [no debug info]:128:2:  store i32 %c, i32* %c.addr, align 4
     [no debug info]:129:2:  store i8* %r, i8** %r.addr, align 8
     [no debug info]:130:2:  %0 = load i32, i32* %c.addr, align 4
     [no debug info]:131:2:  %cmp = icmp sle i32 %0, 0
     [no debug info]:132:2:  br i1 %cmp, label %if.end3, label %if.end
     [no debug info]:162:2:  ret void
     [no debug info]:141:2:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:2:  %rem = srem i32 %4, 10
     [no debug info]:143:2:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:2:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:2:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:2:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:2:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:2:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:2:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:2:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:2:  %add = add nsw i32 48, %7
     [no debug info]:154:2:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:2:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:2:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:2:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:2:  store i32 1, i32* @h, align 4
     [no debug info]:159:2:  br label %if.end3
     [no debug info]:162:2:  ret void
     [no debug info]:141:2:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:2:  %rem = srem i32 %4, 10
     [no debug info]:143:2:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:2:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:2:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:2:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:2:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:2:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:2:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:2:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:2:  %add = add nsw i32 48, %7
     [no debug info]:154:2:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:2:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:2:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:2:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:2:  store i32 1, i32* @h, align 4
     [no debug info]:159:2:  br label %if.end3
     [no debug info]:162:2:  ret void
     [no debug info]:141:2:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:2:  %rem = srem i32 %4, 10
     [no debug info]:143:2:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:2:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:2:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:2:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:2:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:2:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:2:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:2:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:2:  %add = add nsw i32 48, %7
     [no debug info]:154:2:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:2:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:2:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:2:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:2:  store i32 1, i32* @h, align 4
     [no debug info]:159:2:  br label %if.end3
     [no debug info]:162:2:  ret void
     [no debug info]:141:2:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:2:  %rem = srem i32 %4, 10
     [no debug info]:143:2:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:2:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:2:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:2:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:2:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:2:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:2:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:2:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:2:  %add = add nsw i32 48, %7
     [no debug info]:154:2:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:2:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:2:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:2:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:2:  store i32 1, i32* @h, align 4
     [no debug info]:159:2:  br label %if.end3
     [no debug info]:162:2:  ret void
     [no debug info]:141:2:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:2:  %rem = srem i32 %4, 10
     [no debug info]:143:2:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:2:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:2:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:2:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:2:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:2:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:2:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:2:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:2:  %add = add nsw i32 48, %7
     [no debug info]:154:2:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:2:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:2:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:2:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:2:  store i32 1, i32* @h, align 4
     [no debug info]:159:2:  br label %if.end3
     [no debug info]:162:2:  ret void
     [no debug info]:141:2:  %4 = load i32, i32* %n.addr, align 4
     [no debug info]:142:2:  %rem = srem i32 %4, 10
     [no debug info]:143:2:  store i32 %rem, i32* %d, align 4
     [no debug info]:144:2:  %5 = load i32, i32* @h, align 4
     [no debug info]:145:2:  %tobool = icmp ne i32 %5, 0
     [no debug info]:146:2:  %6 = load i32, i32* %d, align 4
     [no debug info]:147:2:  %tobool1 = icmp ne i32 %6, 0
     [no debug info]:148:2:  %or.cond = or i1 %tobool, %tobool1
     [no debug info]:149:2:  br i1 %or.cond, label %if.then2, label %if.end3
     [no debug info]:152:2:  %7 = load i32, i32* %d, align 4
     [no debug info]:153:2:  %add = add nsw i32 48, %7
     [no debug info]:154:2:  %8 = load i8*, i8** %r.addr, align 8
     [no debug info]:155:2:  %idx.ext = sext i32 %add to i64
     [no debug info]:156:2:  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext
     [no debug info]:157:2:  store i8* %add.ptr, i8** %r.addr, align 8
     [no debug info]:158:2:  store i32 1, i32* @h, align 4
     [no debug info]:159:2:  br label %if.end3
     [no debug info]:162:2:  ret void
     [no debug info]:240:2:  %18 = load i32, i32* %i, align 4
     [no debug info]:241:2:  %dec = add nsw i32 %18, -1
     [no debug info]:242:2:  store i32 %dec, i32* %i, align 4
     [no debug info]:243:2:  br label %for.cond8
     [no debug info]:228:2:  %13 = load i32, i32* %i, align 4
     [no debug info]:229:2:  %cmp9 = icmp sge i32 %13, 0
     [no debug info]:230:2:  br i1 %cmp9, label %for.body11, label %for.end13
     [no debug info]:246:2:  ret void
     [no debug info]:268:2:  ret i32 0
